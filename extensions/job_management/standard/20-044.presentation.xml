<?xml version="1.0" encoding="UTF-8"?>
<ogc-standard xmlns="https://www.metanorma.org/ns/ogc" type="presentation" version="2.5.14" schema-version="v1.3.3">
<bibdata type="standard">
<title language="en" format="text/plain">OGC API - Processes - Part 4: Job Management</title>
<docidentifier type="ogc-external">http://www.opengis.net/doc/IS/ogcapi-processes-4/1.0</docidentifier><docidentifier type="ogc-internal" primary="true">20-044</docidentifier><docnumber>20-044</docnumber><date type="published"><on>yyyy-mm-dd</on></date><date type="issued"><on>yyyy-mm-dd</on></date><date type="received"><on>yyyy-mm-dd</on></date><contributor><role type="author"/><organization>
<name>Geolabs</name>
</organization></contributor><contributor><role type="author"/><organization>
<name>Terradue Srl.</name>
</organization></contributor><contributor><role type="author"/><organization>
<name>Computer Research Institute of Montréal (CRIM).</name>
</organization></contributor><contributor><role type="editor"/><person>
<name><completename>Gérald Fenoy</completename></name>
</person></contributor><contributor><role type="publisher"/><organization>
<name>Open Geospatial Consortium</name>
<abbreviation>OGC</abbreviation></organization></contributor><edition>1.0</edition><language current="true">en</language><script current="true">Latn</script><abstract><p>OGC API Standards define modular API building blocks to spatially enable Web APIs in a consistent way. The <xref type="inline" target="OpenAPI-Spec">OpenAPI specification</xref> is used to define the API building blocks.</p>

<p>The OGC API Processes Standard (aka Processes API) defines API building blocks to describe, execute, monitor and retrieve results of Web-accessible processes. OGC API Processes is comprised of multiple parts, each of them is a separate OGC Standard.</p>

<p>The OGC API - Processes - Part 2: Deploy, Replace, Undeploy draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to dynamically add, modify and/or delete individual processes using an implementation (endpoint) of the OGC API - Processes Standard.</p>

<p>The OGC API - Processes - Part 3: Workflows draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to …​</p>

<p>The OGC API - Processes - Part 4: Job Management draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to create, manage and monitor jobs that are associated with processes execution. This part of the standard also defines how to ensure provenance information is preserved and findable.</p>

<admonition type="caution"><name>CAUTION</name><p>This is a DRAFT version of the 2nd part of the OGC API - Processes standards. This draft is not complete and there are open issues that are still under discussion.</p>
</admonition></abstract><status><stage language="">draft</stage><stage language="en">Draft</stage></status><copyright><from>2019</from><owner><organization>
<name>Open Geospatial Consortium</name>
<abbreviation>OGC</abbreviation></organization></owner></copyright><keyword>process</keyword><keyword>collection</keyword><keyword>instance</keyword><keyword>spatial</keyword><keyword>data</keyword><keyword>openapi</keyword><keyword>transactions</keyword><keyword>insert</keyword><keyword>update</keyword><keyword>delete</keyword><keyword>add</keyword><keyword>remove</keyword><keyword>deploy</keyword><keyword>undeploy</keyword><keyword>REST</keyword><keyword>PUT</keyword><keyword>POST</keyword><keyword>DELETE</keyword><ext><doctype>standard</doctype><subdoctype>implementation</subdoctype></ext></bibdata><localized-strings><localized-string key="scope" language="en">Scope</localized-string><localized-string key="symbolsabbrev" language="en">Symbols and abbreviated terms</localized-string><localized-string key="abbrev" language="en">Abbreviated terms</localized-string><localized-string key="symbols" language="en">Symbols</localized-string><localized-string key="table_of_contents" language="en">Contents</localized-string><localized-string key="introduction" language="en">Introduction</localized-string><localized-string key="foreword" language="en">Preface</localized-string><localized-string key="abstract" language="en">Abstract</localized-string><localized-string key="acknowledgements" language="en">Acknowledgements</localized-string><localized-string key="termsdef" language="en">Terms and definitions</localized-string><localized-string key="termsdefsymbolsabbrev" language="en">Terms, definitions, symbols and abbreviated terms</localized-string><localized-string key="termsdefsymbols" language="en">Terms, definitions and symbols</localized-string><localized-string key="termsdefabbrev" language="en">Terms, definitions and abbreviated terms</localized-string><localized-string key="normref" language="en">Normative references</localized-string><localized-string key="bibliography" language="en">Bibliography</localized-string><localized-string key="preface" language="en">Preface</localized-string><localized-string key="section" language="en">Section</localized-string><localized-string key="clause" language="en">Clause</localized-string><localized-string key="annex" language="en">Annex</localized-string><localized-string key="appendix" language="en">Appendix</localized-string><localized-string key="continued" language="en">continued</localized-string><localized-string key="no_terms_boilerplate" language="en"><p>No terms and definitions are listed in this document.</p>
</localized-string><localized-string key="internal_terms_boilerplate" language="en"><p>This document uses the terms defined in <link target="https://portal.ogc.org/public_ogc/directives/directives.php">OGC Policy Directive 49</link>, which is based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this document and OGC documents do not use the equivalent phrases in the ISO/IEC Directives, Part 2.</p>
<p>This document also uses terms defined in the OGC Standard for Modular specifications (<link target="https://portal.opengeospatial.org/files/?artifact_id=34762">OGC 08-131r3</link>), also known as the 'ModSpec'. The definitions of terms such as standard, specification, requirement, and conformance test are provided in the ModSpec.</p>
<p>For the purposes of this document, the following additional terms and definitions apply.</p>
</localized-string><localized-string key="norm_with_refs_pref" language="en">The following documents are referred to in the text in such a way that some or all of their content constitutes requirements of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies.</localized-string><localized-string key="norm_empty_pref" language="en">There are no normative references in this document.</localized-string><localized-string key="external_terms_boilerplate" language="en"><p>This document uses the terms defined in <link target="https://portal.ogc.org/public_ogc/directives/directives.php">OGC Policy Directive 49</link>, which is based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this document and OGC documents do not use the equivalent phrases in the ISO/IEC Directives, Part 2.</p>
<p>This document also uses terms defined in the OGC Standard for Modular specifications (<link target="https://portal.opengeospatial.org/files/?artifact_id=34762">OGC 08-131r3</link>), also known as the 'ModSpec'. The definitions of terms such as standard, specification, requirement, and conformance test are provided in the ModSpec.</p>
<p>For the purposes of this document, the terms and definitions given in % additionally apply.</p>
</localized-string><localized-string key="internal_external_terms_boilerplate" language="en"><p>This document uses the terms defined in <link target="https://portal.ogc.org/public_ogc/directives/directives.php">OGC Policy Directive 49</link>, which is based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this document and OGC documents do not use the equivalent phrases in the ISO/IEC Directives, Part 2.</p>
<p>This document also uses terms defined in the OGC Standard for Modular specifications (<link target="https://portal.opengeospatial.org/files/?artifact_id=34762">OGC 08-131r3</link>), also known as the 'ModSpec'. The definitions of terms such as standard, specification, requirement, and conformance test are provided in the ModSpec.</p>
<p>For the purposes of this document, the terms and definitions given in % and the following additionally apply.</p>
</localized-string><localized-string key="no_information_available" language="en">[NO INFORMATION AVAILABLE]</localized-string><localized-string key="term_defined_in" language="en">(%)</localized-string><localized-string key="binary_and" language="en">%1 and %2</localized-string><localized-string key="multiple_and" language="en">%1, and %2</localized-string><localized-string key="binary_or" language="en">%1 or %2</localized-string><localized-string key="multiple_or" language="en">%1, or %2</localized-string><localized-string key="chain_and" language="en">%1 and %2</localized-string><localized-string key="chain_or" language="en">%1 or %2</localized-string><localized-string key="chain_from" language="en">%1 from %2</localized-string><localized-string key="chain_to" language="en">%1 to %2</localized-string><localized-string key="nested_xref" language="en">%1, %2</localized-string><localized-string key="list_nested_xref" language="en">%1 %2</localized-string><localized-string key="SpelloutRules" language="en">spellout-ordinal</localized-string><localized-string key="OrdinalRules" language="en">digits-ordinal</localized-string><localized-string key="note" language="en">NOTE</localized-string><localized-string key="note_xref" language="en">Note</localized-string><localized-string key="termnote" language="en">Note % to entry</localized-string><localized-string key="list" language="en">List</localized-string><localized-string key="deflist" language="en">Definition List</localized-string><localized-string key="figure" language="en">Figure</localized-string><localized-string key="diagram" language="en">Diagram</localized-string><localized-string key="formula" language="en">Formula</localized-string><localized-string key="inequality" language="en">Formula</localized-string><localized-string key="table" language="en">Table</localized-string><localized-string key="requirement" language="en">Requirement</localized-string><localized-string key="recommendation" language="en">Recommendation</localized-string><localized-string key="permission" language="en">Permission</localized-string><localized-string key="box" language="en">Box</localized-string><localized-string key="no_identifier" language="en">(NO ID)</localized-string><localized-string key="recommendationtest" language="en">Recommendation test</localized-string><localized-string key="requirementtest" language="en">Requirement test</localized-string><localized-string key="permissiontest" language="en">Permission test</localized-string><localized-string key="recommendationclass" language="en">Recommendations class</localized-string><localized-string key="requirementclass" language="en">Requirements class</localized-string><localized-string key="permissionclass" language="en">Permissions class</localized-string><localized-string key="abstracttest" language="en">Abstract test</localized-string><localized-string key="conformanceclass" language="en">Conformance class</localized-string><localized-string key="key" language="en">Key</localized-string><localized-string key="example" language="en">Example</localized-string><localized-string key="example_xref" language="en">Example</localized-string><localized-string key="where" language="en">where</localized-string><localized-string key="where_one" language="en">where</localized-string><localized-string key="wholeoftext" language="en">Whole of text</localized-string><localized-string key="draft_label" language="en">draft</localized-string><localized-string key="inform_annex" language="en">informative</localized-string><localized-string key="norm_annex" language="en">normative</localized-string><localized-string key="modified" language="en">modified</localized-string><localized-string key="adapted" language="en">adapted</localized-string><localized-string key="deprecated" language="en">DEPRECATED</localized-string><localized-string key="source" language="en">SOURCE</localized-string><localized-string key="and" language="en">and</localized-string><localized-string key="all_parts" language="en">All Parts</localized-string><localized-string key="edition_ordinal" language="en">{{ var1 | ordinal_word: '', '' }} edition</localized-string><localized-string key="edition" language="en">edition</localized-string><localized-string key="version" language="en">version</localized-string><localized-string key="toc_figures" language="en">List of Figures</localized-string><localized-string key="toc_tables" language="en">List of Tables</localized-string><localized-string key="toc_recommendations" language="en">List of Recommendations</localized-string><localized-string key="month_january" language="en">January</localized-string><localized-string key="month_february" language="en">February</localized-string><localized-string key="month_march" language="en">March</localized-string><localized-string key="month_april" language="en">April</localized-string><localized-string key="month_may" language="en">May</localized-string><localized-string key="month_june" language="en">June</localized-string><localized-string key="month_july" language="en">July</localized-string><localized-string key="month_august" language="en">August</localized-string><localized-string key="month_september" language="en">September</localized-string><localized-string key="month_october" language="en">October</localized-string><localized-string key="month_november" language="en">November</localized-string><localized-string key="month_december" language="en">December</localized-string><localized-string key="obligation" language="en">Obligation</localized-string><localized-string key="admonition.danger" language="en">Danger</localized-string><localized-string key="admonition.warning" language="en">Warning</localized-string><localized-string key="admonition.caution" language="en">Caution</localized-string><localized-string key="admonition.important" language="en">Important</localized-string><localized-string key="admonition.safety_precautions" language="en">Safety Precautions</localized-string><localized-string key="admonition.editorial" language="en">Editorial Note</localized-string><localized-string key="locality.section" language="en">Section</localized-string><localized-string key="locality.clause" language="en">Clause</localized-string><localized-string key="locality.part" language="en">Part</localized-string><localized-string key="locality.paragraph" language="en">Paragraph</localized-string><localized-string key="locality.chapter" language="en">Chapter</localized-string><localized-string key="locality.page" language="en">Page</localized-string><localized-string key="locality.table" language="en">Table</localized-string><localized-string key="locality.annex" language="en">Annex</localized-string><localized-string key="locality.figure" language="en">Figure</localized-string><localized-string key="locality.example" language="en">Example</localized-string><localized-string key="locality.note" language="en">Note</localized-string><localized-string key="locality.formula" language="en">Formula</localized-string><localized-string key="grammar_abbrevs.masculine" language="en">m</localized-string><localized-string key="grammar_abbrevs.feminine" language="en">f</localized-string><localized-string key="grammar_abbrevs.neuter" language="en">n</localized-string><localized-string key="grammar_abbrevs.common" language="en">common</localized-string><localized-string key="grammar_abbrevs.singular" language="en">sg</localized-string><localized-string key="grammar_abbrevs.dual" language="en">dual</localized-string><localized-string key="grammar_abbrevs.pl" language="en">pl</localized-string><localized-string key="grammar_abbrevs.isPreposition" language="en">prep</localized-string><localized-string key="grammar_abbrevs.isParticiple" language="en">part</localized-string><localized-string key="grammar_abbrevs.isAdjective" language="en">adj</localized-string><localized-string key="grammar_abbrevs.isAdverb" language="en">adv</localized-string><localized-string key="grammar_abbrevs.isNoun" language="en">noun</localized-string><localized-string key="grammar_abbrevs.isVerb" language="en">verb</localized-string><localized-string key="relatedterms.deprecates" language="en">deprecates</localized-string><localized-string key="relatedterms.supersedes" language="en">supersedes</localized-string><localized-string key="relatedterms.narrower" language="en">narrower</localized-string><localized-string key="relatedterms.broader" language="en">broader</localized-string><localized-string key="relatedterms.equivalent" language="en">equivalent</localized-string><localized-string key="relatedterms.compare" language="en">compare</localized-string><localized-string key="relatedterms.contrast" language="en">contrast</localized-string><localized-string key="relatedterms.see" language="en">see</localized-string><localized-string key="relatedterms.seealso" language="en">see also</localized-string><localized-string key="Clause.sg" language="en">Clause</localized-string><localized-string key="Clause.pl" language="en">Clauses</localized-string><localized-string key="Annex.sg" language="en">Annex</localized-string><localized-string key="Annex.pl" language="en">Annexes</localized-string><localized-string key="Appendix.sg" language="en">Appendix</localized-string><localized-string key="Appendix.pl" language="en">Appendixes</localized-string><localized-string key="Note.sg" language="en">Note</localized-string><localized-string key="Note.pl" language="en">Notes</localized-string><localized-string key="Note_%_to_entry.sg" language="en">Note % to entry</localized-string><localized-string key="Note_%_to_entry.pl" language="en">Notes % to entry</localized-string><localized-string key="List.sg" language="en">List</localized-string><localized-string key="List.pl" language="en">Lists</localized-string><localized-string key="Figure.sg" language="en">Figure</localized-string><localized-string key="Figure.pl" language="en">Figures</localized-string><localized-string key="Formula.sg" language="en">Formula</localized-string><localized-string key="Formula.pl" language="en">Formulas</localized-string><localized-string key="Table.sg" language="en">Table</localized-string><localized-string key="Table.pl" language="en">Tables</localized-string><localized-string key="Requirement.sg" language="en">Requirement</localized-string><localized-string key="Requirement.pl" language="en">Requirements</localized-string><localized-string key="Recommendation.sg" language="en">Recommendation</localized-string><localized-string key="Recommendation.pl" language="en">Recommendations</localized-string><localized-string key="Permission.sg" language="en">Permission</localized-string><localized-string key="Permission.pl" language="en">Permissions</localized-string><localized-string key="Example.sg" language="en">Example</localized-string><localized-string key="Example.pl" language="en">Examples</localized-string><localized-string key="Part.sg" language="en">Part</localized-string><localized-string key="Part.pl" language="en">Parts</localized-string><localized-string key="Section.sg" language="en">Section</localized-string><localized-string key="Section.pl" language="en">Sections</localized-string><localized-string key="Paragraph.sg" language="en">Paragraph</localized-string><localized-string key="Paragraph.pl" language="en">Paragraphs</localized-string><localized-string key="Chapter.sg" language="en">Chapter</localized-string><localized-string key="Chapter.pl" language="en">Chapters</localized-string><localized-string key="Page.sg" language="en">Page</localized-string><localized-string key="Page.pl" language="en">Pages</localized-string><localized-string key="admitted" language="en">ALTERNATIVE</localized-string><localized-string key="submitters" language="en">Submitters</localized-string><localized-string key="contributors_clause" language="en">Contributors</localized-string><localized-string key="dochistory" language="en">Revision history</localized-string><localized-string key="sourcecode" language="en">Listing</localized-string><localized-string key="table_of_figures" language="en">Table of Figures</localized-string><localized-string key="security_empty" language="en">No security considerations have been made for this document.</localized-string><localized-string key="submission_date" language="en">Submission Date</localized-string><localized-string key="approval_date" language="en">Approval Date</localized-string><localized-string key="publication_date" language="en">Publication Date</localized-string><localized-string key="author" language="en">Author</localized-string><localized-string key="editor_full" language="en">Editor</localized-string><localized-string key="contributor" language="en">Contributor</localized-string><localized-string key="stage_dict.draft" language="en">Draft</localized-string><localized-string key="stage_dict.work-item-draft" language="en">Work Item Draft</localized-string><localized-string key="stage_dict.swg-draft" language="en">Candidate SWG Draft</localized-string><localized-string key="stage_dict.oab-review" language="en">Candidate OAB Review Draft</localized-string><localized-string key="stage_dict.public-rfc" language="en">Candidate Public RFC Draft</localized-string><localized-string key="stage_dict.tc-vote" language="en">Candidate TC Vote Draft</localized-string><localized-string key="stage_dict.approved" language="en">Approved</localized-string><localized-string key="stage_dict.published" language="en">Published</localized-string><localized-string key="stage_dict.deprecated" language="en">Deprecated</localized-string><localized-string key="stage_dict.rescinded" language="en">Rescinded</localized-string><localized-string key="stage_dict.retired" language="en">Retired</localized-string><localized-string key="language" language="en">en</localized-string><localized-string key="script" language="en">Latn</localized-string></localized-strings><metanorma-extension><table id="_misccontainer_anchor_aliases"><name>Table</name><tbody><tr><th>ats_dru</th><td>http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</td></tr><tr><th>_99e940ea-ac12-4895-8c4c-7ab0fba8b43d</th><td>/conf/dru/deploy/post-op</td></tr><tr><th>ats_dru_deploy_post-op</th><td>/conf/jm/create/post-op</td></tr></tbody></table><presentation-metadata><name>TOC Heading Levels</name><value>2</value></presentation-metadata><presentation-metadata><name>HTML TOC Heading Levels</name><value>2</value></presentation-metadata><presentation-metadata><name>DOC TOC Heading Levels</name><value>2</value></presentation-metadata><presentation-metadata><name>PDF TOC Heading Levels</name><value>2</value></presentation-metadata><metanorma><source><semantic__ogc-standard type="semantic" version="2.5.14" schema-version="v1.3.3">
<semantic__bibdata type="standard">
<semantic__title language="en" format="text/plain">OGC API - Processes - Part 4: Job Management</semantic__title>
<semantic__docidentifier type="ogc-external">http://www.opengis.net/doc/IS/ogcapi-processes-4/1.0</semantic__docidentifier><semantic__docidentifier type="ogc-internal" primary="true">20-044</semantic__docidentifier><semantic__docnumber>20-044</semantic__docnumber><semantic__date type="published"><semantic__on>yyyy-mm-dd</semantic__on></semantic__date><semantic__date type="issued"><semantic__on>yyyy-mm-dd</semantic__on></semantic__date><semantic__date type="received"><semantic__on>yyyy-mm-dd</semantic__on></semantic__date><semantic__contributor><semantic__role type="author"/><semantic__organization>
<semantic__name>Geolabs</semantic__name>
</semantic__organization></semantic__contributor><semantic__contributor><semantic__role type="author"/><semantic__organization>
<semantic__name>Terradue Srl.</semantic__name>
</semantic__organization></semantic__contributor><semantic__contributor><semantic__role type="author"/><semantic__organization>
<semantic__name>Computer Research Institute of Montréal (CRIM).</semantic__name>
</semantic__organization></semantic__contributor><semantic__contributor><semantic__role type="editor"/><semantic__person>
<semantic__name><semantic__completename>Gérald Fenoy</semantic__completename></semantic__name>
</semantic__person></semantic__contributor><semantic__contributor><semantic__role type="publisher"/><semantic__organization>
<semantic__name>Open Geospatial Consortium</semantic__name>
<semantic__abbreviation>OGC</semantic__abbreviation></semantic__organization></semantic__contributor><semantic__edition>1.0</semantic__edition><semantic__language>en</semantic__language><semantic__script>Latn</semantic__script><semantic__abstract><semantic__p>OGC API Standards define modular API building blocks to spatially enable Web APIs in a consistent way. The <semantic__eref type="inline" bibitemid="semantic__OpenAPI-Spec" citeas="OpenAPI Specification 3.0.2">OpenAPI specification</semantic__eref> is used to define the API building blocks.</semantic__p>

<semantic__p>The OGC API Processes Standard (aka Processes API) defines API building blocks to describe, execute, monitor and retrieve results of Web-accessible processes. OGC API Processes is comprised of multiple parts, each of them is a separate OGC Standard.</semantic__p>

<semantic__p>The OGC API - Processes - Part 2: Deploy, Replace, Undeploy draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to dynamically add, modify and/or delete individual processes using an implementation (endpoint) of the OGC API - Processes Standard.</semantic__p>

<semantic__p>The OGC API - Processes - Part 3: Workflows draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to …​</semantic__p>

<semantic__p>The OGC API - Processes - Part 4: Job Management draft specification extends the core capabilities specified in OGC API - Processes - Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to create, manage and monitor jobs that are associated with processes execution. This part of the standard also defines how to ensure provenance information is preserved and findable.</semantic__p>

<semantic__admonition type="caution"><semantic__p>This is a DRAFT version of the 2nd part of the OGC API - Processes standards. This draft is not complete and there are open issues that are still under discussion.</semantic__p>
</semantic__admonition></semantic__abstract><semantic__status><semantic__stage>draft</semantic__stage></semantic__status><semantic__copyright><semantic__from>2019</semantic__from><semantic__owner><semantic__organization>
<semantic__name>Open Geospatial Consortium</semantic__name>
<semantic__abbreviation>OGC</semantic__abbreviation></semantic__organization></semantic__owner></semantic__copyright><semantic__keyword>process</semantic__keyword><semantic__keyword>collection</semantic__keyword><semantic__keyword>instance</semantic__keyword><semantic__keyword>spatial</semantic__keyword><semantic__keyword>data</semantic__keyword><semantic__keyword>openapi</semantic__keyword><semantic__keyword>transactions</semantic__keyword><semantic__keyword>insert</semantic__keyword><semantic__keyword>update</semantic__keyword><semantic__keyword>delete</semantic__keyword><semantic__keyword>add</semantic__keyword><semantic__keyword>remove</semantic__keyword><semantic__keyword>deploy</semantic__keyword><semantic__keyword>undeploy</semantic__keyword><semantic__keyword>REST</semantic__keyword><semantic__keyword>PUT</semantic__keyword><semantic__keyword>POST</semantic__keyword><semantic__keyword>DELETE</semantic__keyword><semantic__ext><semantic__doctype>standard</semantic__doctype><semantic__subdoctype>implementation</semantic__subdoctype></semantic__ext></semantic__bibdata><semantic__metanorma-extension><semantic__table id="semantic___misccontainer_anchor_aliases"><semantic__tbody><semantic__tr><semantic__th>ats_dru</semantic__th><semantic__td>http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</semantic__td></semantic__tr><semantic__tr><semantic__th>_99e940ea-ac12-4895-8c4c-7ab0fba8b43d</semantic__th><semantic__td>/conf/dru/deploy/post-op</semantic__td></semantic__tr><semantic__tr><semantic__th>ats_dru_deploy_post-op</semantic__th><semantic__td>/conf/jm/create/post-op</semantic__td></semantic__tr></semantic__tbody></semantic__table><semantic__presentation-metadata><semantic__name>TOC Heading Levels</semantic__name><semantic__value>2</semantic__value></semantic__presentation-metadata><semantic__presentation-metadata><semantic__name>HTML TOC Heading Levels</semantic__name><semantic__value>2</semantic__value></semantic__presentation-metadata><semantic__presentation-metadata><semantic__name>DOC TOC Heading Levels</semantic__name><semantic__value>2</semantic__value></semantic__presentation-metadata><semantic__presentation-metadata><semantic__name>PDF TOC Heading Levels</semantic__name><semantic__value>2</semantic__value></semantic__presentation-metadata></semantic__metanorma-extension>
<semantic__boilerplate><semantic__copyright-statement>

<semantic__clause id="semantic___copyright_notice" obligation="normative">
<semantic__title>Copyright notice</semantic__title>
<semantic__p id="semantic___b4a0191a-6824-1f33-66b1-2183d2dbf5a5" align="center">Copyright © 2019 Open Geospatial Consortium<semantic__br/> To obtain additional rights of use, visit<semantic__link target="https://www.ogc.org/legal"/></semantic__p>
</semantic__clause>

<semantic__clause id="semantic___note" obligation="normative">
<semantic__title>Note</semantic__title>
<semantic__p id="semantic___11e88dba-9912-1a89-a82d-7291bf232191" align="left">Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The Open Geospatial Consortium shall not be held responsible for identifying any or all such patent rights.</semantic__p>

<semantic__p id="semantic___15067213-c07b-cba0-7e18-395ab2e00ab3" align="left">Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of the standard set forth in this document, and to provide supporting documentation.</semantic__p>
</semantic__clause>
</semantic__copyright-statement>

<semantic__license-statement>

<semantic__clause id="semantic___license_agreement" obligation="normative">
<semantic__title>License Agreement</semantic__title>
<semantic__p id="semantic___f5fe34fd-12e2-2bb7-8cd6-9d4cffa96538">Use of this document is subject to the license agreement at <semantic__link target="https://www.ogc.org/license"/></semantic__p>
</semantic__clause>
</semantic__license-statement>

<semantic__legal-statement>

<semantic__clause id="semantic___notice_for_drafts" obligation="normative">
<semantic__title>Notice for Drafts</semantic__title>
<semantic__p id="semantic___09caafd2-d047-3050-9095-b3f182faf86f">This document is not an OGC Standard. This document is distributed for review and comment. This document is subject to change without notice and may not be referred to as an OGC Standard.</semantic__p>

<semantic__p id="semantic___d80fd0eb-fbfd-dec3-0ddb-92472f4d5fcf">Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.</semantic__p>
</semantic__clause>
</semantic__legal-statement>

<semantic__feedback-statement>

<semantic__clause id="semantic__boilerplate-standard-feedback" obligation="normative">
<semantic__p id="semantic___bb5602d2-6eb1-e557-e221-499759fe237f">Suggested additions, changes and comments on this document are welcome and encouraged. Such suggestions may be submitted using the online change request form on OGC web site: <semantic__link target="http://ogc.standardstracker.org/"/></semantic__p>
</semantic__clause>
</semantic__feedback-statement>
</semantic__boilerplate><semantic__preface><semantic__abstract id="semantic___abstract"><semantic__title>Abstract</semantic__title><semantic__p id="semantic___f348fa41-f40d-e2a5-87f1-f9c8f83679ef">OGC API Standards define modular API building blocks to spatially enable Web APIs in a consistent way. The <semantic__eref type="inline" bibitemid="semantic__OpenAPI-Spec" citeas="OpenAPI Specification 3.0.2">OpenAPI specification</semantic__eref> is used to define the API building blocks.</semantic__p>

<semantic__p id="semantic___aec4597b-4c71-399d-eae5-9b1c5a712b8a">The OGC API Processes Standard (aka Processes API) defines API building blocks to describe, execute, monitor and retrieve results of Web-accessible processes. OGC API Processes is comprised of multiple parts, each of them is a separate OGC Standard.</semantic__p>

<semantic__p id="semantic___2e00133c-e259-2cce-0e6c-ed22fcbc7d44">The OGC API — Processes — Part 2: Deploy, Replace, Undeploy draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to dynamically add, modify and/or delete individual processes using an implementation (endpoint) of the OGC API — Processes Standard.</semantic__p>

<semantic__p id="semantic___77eea8d7-cef8-cd53-9b25-cf8c56a56776">The OGC API — Processes — Part 3: Workflows draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to …​</semantic__p>

<semantic__p id="semantic___55c88114-2158-cd12-3cac-94ce0b061570">The OGC API — Processes — Part 4: Job Management draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] with the ability to create, manage and monitor jobs that are associated with processes execution. This part of the standard also defines how to ensure provenance information is preserved and findable.</semantic__p>

<semantic__admonition id="semantic___bf3e680c-8523-1367-cbfe-0c0ecf4ba94b" type="caution"><semantic__p id="semantic___3c54f463-04ab-6afb-b48c-b91e28f09168">This is a DRAFT version of the 2nd part of the OGC API — Processes standards. This draft is not complete and there are open issues that are still under discussion.</semantic__p>
</semantic__admonition></semantic__abstract><semantic__clause id="semantic___security_considerations" type="security" obligation="informative">
<semantic__title>Security Considerations</semantic__title>
<semantic__p id="semantic___00c9472e-dbc7-f796-a8df-a150ce697468">See <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core</semantic__eref>, Clause 10.4.</semantic__p>

<semantic__p id="semantic___db346df5-19b5-7146-5d4e-a5325e9af09e">Since deploy, replace and undeploy (DRU) operations will change the processes available to a client, servers will — in almost all cases — restrict the access to these operations.</semantic__p>

<semantic__p id="semantic___0611bcc2-7a2a-5ca0-cb43-4fbfd164ef1c">Users making modifications to process resources need to:</semantic__p>

<semantic__ol id="semantic___ff67afea-117c-9a74-a942-ed1e486c38b5" type="arabic"><semantic__li><semantic__p id="semantic___db72525e-d308-2d6c-f2a9-f6a3e2c689bd">Be authenticated,</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___2227f124-9aed-5059-1656-68746d33aed7">Have “modification privileges” on the processes offered through the API,</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___8533f17e-74cf-10be-1249-57ec2bc55809">Have access to one or more of the POST, PUT and/or DELETE methods on the processes / processes/{processId} endpoints.</semantic__p>
</semantic__li>
</semantic__ol>

<semantic__p id="semantic___f2acf1d5-dc7f-f046-c093-060f2df9f0ca">The API definition, as defined in Clause 7.3 from <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>, must reflect this in the resource paths and their available methods.</semantic__p>

<semantic__p id="semantic___1b6daaa9-7136-4e1e-4740-1be1ed64df06">Examples in the Clauses specifying the requirements classes focus on the mechanics of the POST, PUT, and DELETE methods and exclude authentication. Since authentication will typically be required for all DRU requests, this section provides some examples/guidance:</semantic__p>

<semantic__p id="semantic___d5adbc48-b81b-55ea-33aa-8eae1c7fb1b2">The OpenAPI definition exposed by the serve will declare the authentication schemes that an implementation of the Processes — Part 2 (DRU) supports for each operation (or for all operations in the API implementation).</semantic__p>

<semantic__p id="semantic___91ccaf1d-bb93-09c6-590e-37ad2c1b5406">A member “security” in the OpenAPI definition object can be provided to list the default security schemes supported by all operations. Individual DRU operations can override this default by providing a “security” member for the individual operation.</semantic__p>

<semantic__example id="semantic__auth-example-1">
<semantic__name>Example OpenAPI definition with security requirements</semantic__name>
<semantic__p id="semantic___42c9e9e4-5d63-c7d2-48e3-e625ffa0dcd3">The following OpenAPI definition declares that the API accepts either api keys in an “X-API-Key” header or Json Web Token (JWT) bearer tokens to authenticate the requestor. X-API-KEY is a custom HTTP header that can be used to secure APIs. The API implementation will decide, if an authenticated request is rejected or executed based on the privileges of the authenticated user.</semantic__p>

<semantic__sourcecode id="semantic___fbee54d9-0b10-39f8-442f-59d7212227bf" lang="JSON">{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "My API",
    "description" : "This API ...",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://example.com/api/v1"
  } ],
  "security" : [ {
    "JWT" : [ ],
    "api_key": [ ]
  } ],
  "paths" : { },
  "components" : {
    "securitySchemes": {
      "JWT" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "api_key" : {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  }
}</semantic__sourcecode>

</semantic__example>

<semantic__p id="semantic___e92cc79a-ec22-8c7b-2fdd-8d5fb68b61d5">If the authentication of a secured request fails or if the user does not have sufficient privileges, the API endpoint will return an error.</semantic__p>

<semantic__p id="semantic___35dfb9b0-c9f8-acd6-7652-5039494b5487">In case the request does not include information to authenticate the user, the server will respond with a 401 response (“Unauthorized”). The response will include a “WWW-Authenticate” header with hints as to how authentication credentials are provided.</semantic__p>

<semantic__sourcecode id="semantic__auth-example-2"><semantic__name>Unauthorized request</semantic__name>Client                                                        Server
  |                                                             |
  |  DELETE /processes/SampleProcess   HTTP/1.1                 |
  | -----------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1  401 Unauthorized                                 |
  |  Date: Mon, 23 May 2022 11:18:45 GMT                        |
  |  WWW-Authenticate: Bearer realm="my-realm"                  |
  |  WWW-Authenticate: ApiKey header="X-API-Key"                |
  |  Content-Type: application/problem+json                     |
  |  Vary: Accept                                               |
  |  Content-Length: 86                                         |
  |                                                             |
  |  {                                                          |
  |    "status": 401,                                           |
  |    "title": "Unauthorized",                                 |
  |    "detail": "HTTP 401 Unauthorized"                        |
  |  }                                                          |
  | &#x3c;-----------------------------------------------------------|</semantic__sourcecode>


<semantic__note id="semantic___6f2294dc-3ad0-21da-af60-25ee326b832d"><semantic__p id="semantic___a258995f-7c33-98d3-cf06-166581d31773">HTTP WWW-Authenticate header is a response-type header. It serves as a support for various authentication mechanisms which are important to control access to pages and other resources as well. All of these mechanisms are based on the use of the 401 status code. The HTTP WWW-Authenticate response header defines the authentication method that ought to be wont to gain access to a resource. As discussed earlier, the WWW-Authenticate header is sent along with a 401 Unauthorized response. (GeeksforGeeks.org, 2023)</semantic__p>
</semantic__note>

<semantic__p id="semantic___d66b17ec-b8a2-9487-cef8-4655b68685cf">If valid authentication credentials have been provided, but the API refuses to execute the operation, because the user has insufficient privileges, the server will typically return a 403 response (“Forbidden”).</semantic__p>

<semantic__sourcecode id="semantic__auth-example-3"><semantic__name>Forbidden request</semantic__name>Client                                                              Server
  |                                                                   |
  | DELETE /processes/SampleProcess HTTP/1.1                          |
  | Host: example.com                                                 |
  | Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ97HgQ    |
  |------------------------------------------------------------------&#x3e;|
  |                                                                   |
  | HTTP/1.1 403 Forbidden                                            |
  | Date: Mon, 23 May 2022 11:18:55 GMT                               |
  | Content-Type: application/problem+json                            |
  | Vary: Accept                                                      |
  | Content-Length: 80                                                |
  |                                                                   |
  | {                                                                 |
  |   "status" : 403,                                                 |
  |   "title" : "Forbidden",                                          |
  |   "detail" : "HTTP 403 Forbidden"                                 |
  | }                                                                 |
  |&#x3c;------------------------------------------------------------------|</semantic__sourcecode>


<semantic__p id="semantic___231862aa-282a-0289-7ee9-35ddd11d76db">However, for security reasons, the server may also decide to return other status codes to hide information from a potential attacker. For example, the server may decide to return a 401 response even for a valid, but un-privileged user. Or the server may return a 404 response (“Not Found”) to hide the fact that the resource exists in the first place, typically if the user would also not be privileged to fetch the resource with a GET operation.</semantic__p>
</semantic__clause><semantic__submitters id="semantic___submitters">
<semantic__title>Submitters</semantic__title>
<semantic__p id="semantic___feaa5b51-ad60-39cf-a4bd-25c944916941">All questions regarding this submission should be directed to the editors or the submitters:</semantic__p>

<semantic__table id="semantic___38ae8950-9025-c2f9-0ab0-1f8f82a9b417" unnumbered="true"><semantic__thead><semantic__tr><semantic__th valign="middle" align="left">Name</semantic__th>
<semantic__th valign="middle" align="left">Affiliation</semantic__th>
</semantic__tr></semantic__thead>
<semantic__tbody><semantic__tr><semantic__td valign="middle" align="left">Gérald Fenoy <semantic__em>(editor)</semantic__em></semantic__td>
<semantic__td valign="middle" align="left">GeoLabs</semantic__td>
</semantic__tr></semantic__tbody>
</semantic__table>
</semantic__submitters></semantic__preface><semantic__sections>

<semantic__clause id="semantic___scope" type="scope" obligation="normative">
<semantic__title>Scope</semantic__title>
<semantic__p id="semantic___9a5ff78c-7398-5cf9-3635-4abfdf275148">The OGC API — Processes — Part 4 Standard is an extension to the OGC API – Processes – Part 1: Core Standard [<semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>] and defines the behavior of a server that supports the ability to create jobs without implying the process execution starts right away.</semantic__p>

<semantic__p id="semantic___6824af80-da89-f664-3293-47e09cb572c2">Specifically, the Processes Part 4 Standard specifies:</semantic__p>

<semantic__ul id="semantic___f0671639-63cf-94b1-d752-3decb17f2720"><semantic__li><semantic__p id="semantic___f1a081c9-773a-f05f-61d7-85882315aff2">How to manage job.</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___c7c65dfe-3f3d-65f3-2977-fd45a7fda6db">How to handle provenenance information associated with a job.</semantic__p>
</semantic__li>
</semantic__ul>
</semantic__clause>

<semantic__clause id="semantic___conformance" type="conformance" obligation="normative">
<semantic__title>Conformance</semantic__title>
<semantic__p id="semantic___d0ff23cb-8f01-b005-947a-c73002a63cd8">The OGC API — Processes — Part 4 Standard defines the following requirements classes.</semantic__p>

<semantic__p id="semantic___683e2e8b-abb1-35f1-0206-6501d2cc86b1">The main requirements class is:</semantic__p>

<semantic__ul id="semantic___00cc3af8-9964-58f9-0774-d24b4cc9f8c6"><semantic__li><semantic__p id="semantic___56b07a2e-6f5d-ebf5-a3bd-15a3e1e35665"><semantic__xref target="semantic__rc_job-management">Job Management</semantic__xref>.</semantic__p>
</semantic__li>
</semantic__ul>

<semantic__p id="semantic___82ab0468-50c4-0758-dc0f-38626718ce56">This class specifies requirements that any Web API implementing Processes Part 4 must conform with.</semantic__p>

<semantic__p id="semantic___48f8c926-f5af-e4df-5754-7195f77018c5">The <semantic__tt>Job Management</semantic__tt> class does mandate a specific encoding and format for the job definition.  However, the Part 4 extension defines the following conformance class:</semantic__p>

<semantic__ul id="semantic___84b11349-5b7f-e478-3f97-96f84d18815b"><semantic__li><semantic__p id="semantic___7a598c53-aaa7-94ab-46ea-ce830a59974f"><semantic__xref target="semantic__rc_openeo">OpenEO graph</semantic__xref></semantic__p>
</semantic__li>
</semantic__ul>

<semantic__p id="semantic___1764b560-4cec-1b3f-328f-1ec8df7a5b0f">The <semantic__tt>OpenEO grap</semantic__tt> class defines that jobs can be created from an OpenEO graph.</semantic__p>

<semantic__p id="semantic___947fd253-a7e4-74ca-7cbb-143438d2fb03">The provenance information associated with a job is not mandated to be supported by the server. A dedicated requirements class <semantic__xref target="semantic__rc_provenance">Provenance</semantic__xref> is defined for this feature.</semantic__p>

<semantic__p id="semantic___a6315be5-c0dd-0fd6-5f31-1809d4c05c68">The standardization target for all Conformance class defined in this Standard is “Web API”.</semantic__p>

<semantic__p id="semantic___6cf8e359-676d-9beb-e148-3bc74fa3245c">Conformance with this Standard shall be checked using all the relevant tests specified in <semantic__xref target="semantic__ats"/> of this document. The framework, concepts, and methodology for testing, and the criteria to be achieved to claim conformance are specified in the OGC Compliance Testing Policies and Procedures and the OGC Compliance Testing web site.</semantic__p>
</semantic__clause>



<semantic__clause id="semantic___terms_definitions_and_abbreviated_terms" obligation="normative" type="terms">
<semantic__title>Terms, definitions and abbreviated terms</semantic__title><semantic__p id="semantic___2f416b57-43bc-2a3e-a854-e5e5dc805e79">This document uses the terms defined in <semantic__link target="https://portal.ogc.org/public_ogc/directives/directives.php">OGC Policy Directive 49</semantic__link>, which is based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this document and OGC documents do not use the equivalent phrases in the ISO/IEC Directives, Part 2.</semantic__p>
<semantic__p id="semantic___76fd54bc-da44-732d-e5ab-f7f7d63b7ef3">This document also uses terms defined in the OGC Standard for Modular specifications (<semantic__link target="https://portal.opengeospatial.org/files/?artifact_id=34762">OGC 08-131r3</semantic__link>), also known as the ‘ModSpec’. The definitions of terms such as standard, specification, requirement, and conformance test are provided in the ModSpec.</semantic__p>
<semantic__p id="semantic___5af7e456-ee12-5d22-ff45-eb2571f1cf31">For the purposes of this document, the following additional terms and definitions apply.</semantic__p>

<semantic__terms id="semantic___terms_and_definitions" obligation="normative">
<semantic__title>Terms and definitions</semantic__title>
<semantic__term id="semantic__term-Execution-unit"><semantic__preferred><semantic__expression>
<semantic__name>Execution unit</semantic__name>
</semantic__expression>
</semantic__preferred>
<semantic__definition><semantic__verbal-definition><semantic__p id="semantic___530ebfd3-7989-8847-2d89-2b8480e2fa99">A component containing a process that an implementation of the Processes API Part 1 can run.</semantic__p></semantic__verbal-definition></semantic__definition>
 </semantic__term>

<semantic__term id="semantic__term-Deploy"><semantic__preferred><semantic__expression>
<semantic__name>Deploy</semantic__name>
</semantic__expression>
</semantic__preferred>
<semantic__definition><semantic__verbal-definition><semantic__p id="semantic___001afca1-7aa6-75ca-da91-2bce78e894bf">Deploy refers to installing a desired execution unit onto a Processes API server so that client applications can interact with it as a process using the Processes API Part 1 Standard.</semantic__p></semantic__verbal-definition></semantic__definition>
 </semantic__term>

<semantic__term id="semantic__term-Replace"><semantic__preferred><semantic__expression>
<semantic__name>Replace</semantic__name>
</semantic__expression>
</semantic__preferred>
<semantic__definition><semantic__verbal-definition><semantic__p id="semantic___0aa6d08d-8fb9-6adb-7e72-9d4c943cf7a3">Replace refers to upgrading a deployed process from a Processes API implementation.</semantic__p></semantic__verbal-definition></semantic__definition>
 </semantic__term>

<semantic__term id="semantic__term-Undeploy"><semantic__preferred><semantic__expression>
<semantic__name>Undeploy</semantic__name>
</semantic__expression>
</semantic__preferred>
<semantic__definition><semantic__verbal-definition><semantic__p id="semantic___ca2c5ce1-49c5-b3ac-b08a-aff5243982b9">Undeploy refers to removing a deployed process from a Processes API implementation so that it does not appear as an available process.</semantic__p></semantic__verbal-definition></semantic__definition>
 </semantic__term>
</semantic__terms>

<semantic__definitions id="semantic___abbreviated_terms" type="abbreviated_terms" obligation="normative">
<semantic__title>Abbreviated terms</semantic__title>
<semantic__dl id="semantic___0d1a1300-d289-10ea-bdf6-33cc0a4d9480"><semantic__dt id="semantic__symbol-CWL">CWL</semantic__dt><semantic__dd><semantic__p id="semantic___39817e20-e534-3875-bf59-777bb909a39d">Common Workflow Language</semantic__p>
</semantic__dd>
<semantic__dt id="semantic__symbol-DRU">DRU</semantic__dt><semantic__dd><semantic__p id="semantic___48dab7b6-0c71-b288-3c64-e18d6b26dc55">Deploy, Replace, Undeploy</semantic__p>
</semantic__dd></semantic__dl>
</semantic__definitions></semantic__clause>

<semantic__clause id="semantic___conventions_and_background" obligation="normative">
<semantic__title>Conventions and background</semantic__title>
<semantic__p id="semantic___cc820a6f-d866-93a3-e271-f7886c1ecd99">See <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>, Clause 5.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___requirements_class_job_management" obligation="normative">
<semantic__title>Requirements Class “Job Management”</semantic__title>
<semantic__clause id="semantic__job-management" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__rc_job-mangement" model="ogc" type="class" obligation="requirement"> <semantic__subject>Web API</semantic__subject><semantic__inherit><semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core, Conformance Class ‘core’</semantic__eref></semantic__inherit><semantic__inherit><semantic__xref target="semantic__rfc2616">RFC 2616 (HTTP/1.1)</semantic__xref></semantic__inherit><semantic__classification><semantic__tag>label</semantic__tag><semantic__value><semantic__link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management"/></semantic__value></semantic__classification>
</semantic__requirement>

<semantic__p id="semantic___2f56c36e-7def-d36c-3038-bc4f4229d0ce">A server that implements the Job Management Requirements Class provides the ability to create, update and start jobs.</semantic__p>

<semantic__p id="semantic___b6ac1d2b-1856-36f5-86b7-3fa58f1976d0">The HTTP POST method is used to create new jobs.</semantic__p>

<semantic__p id="semantic___a37c8cb3-4585-d4c6-2fa1-80b32b1569ad">The HTTP PUT method is used to update the definition of a previously created jobs that are accessible via the Processes API endpoint.</semantic__p>

<semantic__p id="semantic___ef83859b-5663-aaa9-a704-93776db15baf">Finally, the HTTP POST method is used to start a job.</semantic__p>

<semantic__p id="semantic___0c799614-13f0-a70b-7d13-83d729c3d6b9">Creating or updating a job requires that a formal description of the new or updated jobs be provided by the client.  This Standard does mandate that a specific jobs schema be used. However, this extension defines the following conformance classe:</semantic__p>

<semantic__ul id="semantic___3585aa23-1c61-14d5-0e35-94cd7c5ea7a0"><semantic__li><semantic__p id="semantic___8a112ccc-1c26-5790-a412-517909150f93"><semantic__xref target="semantic__rc_openeo">OpenEO Process Graph</semantic__xref>, that enables support for OpenEO-encoded jobs definition.</semantic__p>
</semantic__li>
</semantic__ul>

<semantic__clause id="semantic__job-management-http_status_codes" obligation="normative">
<semantic__title>HTTP status codes</semantic__title>
<semantic__p id="semantic___e92769ac-e2cc-e04b-2300-3c916b26911b">Clients implementing the Processes API Part 4 should be prepared to handle any legal HTTP or HTTPS status code.</semantic__p>

<semantic__p id="semantic___89f0b819-282b-3e77-0071-cb16e2aad27b">The <semantic__strong>Status Codes</semantic__strong> listed in <semantic__xref target="semantic__status_codes"/> are of particular relevance to implementors of this Standard. Status codes 200, 201 and 404 are called out in API requirements. Therefore, support for these status codes is mandatory for all compliant implementations. The remainder of the status codes in <semantic__xref target="semantic__status_codes"/> are not mandatory, but are important for the implementation of a well functioning API implementation. Support for these status codes is strongly encouraged for both client and server implementations.</semantic__p>

<semantic__table id="semantic__status_codes"><semantic__colgroup><semantic__col width="15%"/><semantic__col width="85%"/></semantic__colgroup>
<semantic__name>Typical HTTP status codes</semantic__name>
<semantic__thead><semantic__tr><semantic__th valign="middle" align="left">Status code</semantic__th>
<semantic__th valign="middle" align="left">Description</semantic__th>
</semantic__tr></semantic__thead>
<semantic__tbody><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>200</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">A successful request.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>201</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server has successfully completed the operation and a new resource has been created.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>202</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The request was accepted for processing, but the processing was not completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>204</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">A successful request with no additional content to send in the response.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>400</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server cannot or will not process the request due to an apparent client error. For example, a query parameter had an incorrect value.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>401</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The request requires user authentication. The response includes a <semantic__tt>WWW-Authenticate</semantic__tt> header field containing a challenge applicable to the requested resource.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>403</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server understood the request, but is refusing to execute the request. While status code <semantic__tt>401</semantic__tt> indicates missing or bad authentication, status code <semantic__tt>403</semantic__tt> indicates that authentication is not the issue, but that the client is not authorized to perform the requested operation on the resource.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>404</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The requested resource does not exist on the server. For example, a path parameter had an incorrect value.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>405</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The request method is not supported. For example, a POST request was submitted, but the resource only supports GET requests.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>406</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">Content negotiation failed. For example, the <semantic__tt>Accept</semantic__tt> header submitted in the request did not support any of the media types supported by the server for the requested resource.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>412</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The status code indicates that one or more conditions given in the request header fields evaluated to false when tested by the server.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>413</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server is refusing to process the request because the request content is larger than the server is willing or able to process.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>415</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server is refusing to service the request because the content is in a format not supported by this method on the target resource.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>422</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">The server understands the content type of the request content and the syntax of the request content is correct, but was unable to process the contained instructions. For example, the submitted resource does not meet a semantic constraint, e.g. a mandatory property is missing.</semantic__td>
</semantic__tr><semantic__tr><semantic__td valign="middle" align="left"><semantic__tt>500</semantic__tt></semantic__td>
<semantic__td valign="middle" align="left">An internal error occurred in the server.</semantic__td>
</semantic__tr></semantic__tbody>
<semantic__note id="semantic___e20439c0-497a-8b68-1152-cd4524a855e9"><semantic__p id="semantic___c7bc9ecf-4eec-b650-f869-13d6331becc3">Status code <semantic__tt>422</semantic__tt> is not yet an official HTTP status code, but is expected to be added by the <semantic__link target="https://www.ietf.org/archive/id/draft-ietf-httpbis-semantics-14.html#name-422-unprocessable-content">draft IETF RFC “HTTP Semantics”</semantic__link>.</semantic__p>
</semantic__note></semantic__table>



<semantic__p id="semantic___3c931324-e44c-73af-e849-c72ada9af358">More specific guidance is provided for each resource, where applicable.</semantic__p>

<semantic__permission id="semantic__per_deploy-replace-undeploy_additional-status-codes" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/per/core/additional-status-codes</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___414d9b94-12a0-3fb7-fe66-53f66f4158d3">Servers MAY support other HTTP protocol capabilities. Therefore, the server may return other status codes than those listed in <semantic__xref target="semantic__status_codes"/>.</semantic__p>
</semantic__component>
</semantic__permission>

<semantic__p id="semantic___b1dd6cbd-9b9f-4250-a02f-77caf3eb447f">The API Description Document describes the HTTP status codes generated by that API imeplementation instance. This should not be an exhaustive list of all possible status codes. It is not reasonable to expect an API designer to control the use of HTTP status codes which are not generated by their software. Therefore, it is recommended that the API Description Document be limited to describing HTTP status codes relevant to the proper operation of the API application logic. Client implementations should be prepared to receive HTTP status codes in addition to those described in the API Description Document.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic__cross_origin" obligation="normative">
<semantic__title>Cross-origin requests</semantic__title>
<semantic__p id="semantic___b30beb80-1a3e-d2b3-470b-e84e9441eb5c">See <semantic__eref type="inline" bibitemid="semantic__OAFeat-1" citeas="OGC 17-069r3">OGC API — Features — Part 1: Core</semantic__eref>, section <semantic__link target="http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#cross_origin">Support for cross-origin requests</semantic__link>, about the importance of supporting cross-origin requests, typically via <semantic__link target="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">Cross-origin resource sharing (CORS)</semantic__link>.</semantic__p>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic__create" obligation="normative">
<semantic__title>Creating a new job</semantic__title>
<semantic__clause id="semantic___sequence_diagram" obligation="normative">
<semantic__title>Sequence diagram</semantic__title>
<semantic__p id="semantic___0bee8a28-cf0d-d28b-75d8-df41119cdd34">The following diagram illustrates the sequence diagram for deploying a new process to the API:</semantic__p>

<semantic__sourcecode id="semantic___a4e6f8e6-c4f5-9ce4-ea3b-84faade725b1">Client                                                        Server
  |                                                             |
  |  POST /jobs   HTTP/1.1                                      |
  |  Content-Type: application/json                             |
  |                                                             |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 201 Created                                       |
  |  Location: /jobs/{jobId}                                    |
  |&#x3c;------------------------------------------------------------|</semantic__sourcecode>

</semantic__clause>

<semantic__clause id="semantic___operation" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-management_create_post-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/post-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___36b7d4d5-6d09-8c3c-73b3-2cc4465d1578">The server SHALL support the HTTP POST operation at the path <semantic__tt>/jobs</semantic__tt>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___request_body" obligation="normative">
<semantic__title>Request body</semantic__title>
<semantic__clause id="semantic___overview" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__req_deploy-replace-undeploy_deploy_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___aa6bf747-e700-221c-62cf-5d246125a6cc">The body of the POST request SHALL be in JSON format.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__permission id="semantic__per_job-management_create_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/per/job-management/create/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___ddba736b-41bd-baca-44af-87da2e8f2748">A server MAY support any encoding in the body of a HTTP POST operation.</semantic__p>
</semantic__component>
</semantic__permission>

<semantic__requirement id="semantic__req_job-management_create_content-type" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/content-type</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___71e70808-393b-8a68-09ff-e966dd3dc3eb">The <semantic__tt>Content-Type</semantic__tt> <semantic__link target="https://tools.ietf.org/html/rfc2616#section-14.17">header</semantic__link> SHALL be used to declare the media type of the request.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__p id="semantic___87b91a75-d8dd-9e1e-eca5-a77282de714c">See <semantic__link target="https://www.rfc-editor.org/rfc/rfc7231#section-3.1.1.5">section 3.1.1.5 of RFC 7231</semantic__link> for details.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___ogc_api_processes_workflow_execute_request_body" obligation="normative">
<semantic__title>OGC API — Processes — Workflow Execute Request body</semantic__title>
<semantic__recommendation id="semantic__rec_job-management_create_body-ogcapi-processes" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/rec/job-management/create/body-ogcapi-processes</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___c6f8da73-0c8f-e55f-5690-45bfb3b4017c">If the job can be encoded as an <semantic__xref target="semantic__rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</semantic__xref>, implementation SHOULD consider supporting the <semantic__xref target="semantic__rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</semantic__xref> encoding.</semantic__p>
</semantic__component>
</semantic__recommendation>
</semantic__clause>

<semantic__clause id="semantic___openeo_process_graph_body" obligation="normative">
<semantic__title>OpenEO Process Graph body</semantic__title>
<semantic__recommendation id="semantic__rec_job-management_create_body-openeo" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/rec/job-management/create/body-openeo</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___3d340715-23f3-4281-99d5-e522e032a365">If the job can be encoded as an <semantic__xref target="semantic__rc_openeo">OpenEO graph</semantic__xref>, implementation SHOULD consider supporting the <semantic__xref target="semantic__rc_openeo">OpenEO graph</semantic__xref> encoding.</semantic__p>
</semantic__component>
</semantic__recommendation>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___response" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__requirement id="semantic__req_job-management_create_response-jobid" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/response-jobid</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___1c4876b6-541d-f3f5-7b84-09ab865b20f5">If the operation completes, the server SHALL generate a job identifier (i.e. <semantic__tt>{jobId}</semantic__tt>) for the created job.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__requirement id="semantic__req_job-management_create_response_success" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/response-success</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___d592498f-78d6-58ff-e785-aae85a805b3e">A successful execution of the operation SHALL be reported as a response with a HTTP status code <semantic__tt>201</semantic__tt>.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___4b76a13a-b1d4-8f72-409f-904a44ad0b5a">A response with HTTP status code <semantic__tt>201</semantic__tt> SHALL include a <semantic__tt>Location</semantic__tt> header with the URI of the deployed processes (path: <semantic__tt>/jobs/{jobId}</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__requirement id="semantic__req_job-management_create_response-body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/create/response-body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___8323b904-7265-861a-949c-774ceed142db">The response SHALL include a body that contains a status information of the created job conforms to the <semantic__link target="https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/statusInfo.yaml">statusInfo.yaml</semantic__link> schema.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___bde06cd4-9b3c-ac17-64ad-4d6f55e73ea4">The response SHALL contains a <semantic__tt>pending</semantic__tt> status code and the <semantic__tt>jobId</semantic__tt> property that contains the job identifier.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___exceptions" obligation="normative">
<semantic__title>Exceptions</semantic__title>
<semantic__p id="semantic___f7b92c5f-fd35-93c0-162b-d84cc963cfc4">See <semantic__xref target="semantic__job-management-http_status_codes"/> for general guidance.</semantic__p>

<semantic__p id="semantic___e74afee7-e3a9-bc9e-db1c-8cf1d7060cc9">If the request body’s media type is not supported by the server, see requirement /req/deploy-replace-undeploy/deploy/unsupported-media-type from <semantic__eref type="inline" bibitemid="semantic__OAProc-2" citeas="OGC 20-044"/>.</semantic__p>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic__update" obligation="normative">
<semantic__title>Updating an existing job</semantic__title>
<semantic__clause id="semantic___sequence_diagram_2" obligation="normative">
<semantic__title>Sequence diagram</semantic__title>
<semantic__p id="semantic___60d0883d-3c21-5ce4-0bf8-9a211d8cc57c">The following diagram illustrates the sequence diagram for updating a
previously created job.  The identifier of the job does not change.<semantic__note id="semantic___4df02ccd-f792-92a7-e73d-87e4cc0f33d6"><semantic__p id="semantic___2e02f93e-0d50-00bf-bf6c-cdcb14df6978">The new job definition replaces the old job definition. Version control is not discussed in this Standard.</semantic__p>
</semantic__note></semantic__p>



<semantic__sourcecode id="semantic___5bfb4670-db3f-fffa-3b4c-322e3609d69c">Client                                                        Server
  |                                                             |
  |  PUT /jobs/{jobId}   HTTP/1.1                               |
  |  Content-Type: application/json                             |
  |                                                             |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 204 OK                                            |
  |&#x3c;------------------------------------------------------------|</semantic__sourcecode>

</semantic__clause>

<semantic__clause id="semantic___operation_2" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-management_update_put-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/update/put-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___452a4c49-5c22-df55-8b9d-dea9d14d2732">For every created jobs (path ‘/jobs/{jobId}’), the server SHALL support the HTTP PUT operation.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___68ab5be2-fee6-8578-2504-ceadebe1af5c">The parameter ‘jobId’ is each ‘jobID’ property in the jobs list response (JSONPath: <semantic__tt>$.jobs[*].jobID</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___request_body_2" obligation="normative">
<semantic__title>Request body</semantic__title>
</semantic__clause>

<semantic__clause id="semantic___overview_2" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__req_job-management_update_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/update/body*</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___51f8cccc-e230-10e9-a6de-577261d88fe5">The body of a PUT request SHALL be in JSON format.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__permission id="semantic__per_job-management_update_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/per/job-management/update/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___19ee445f-6d52-0b18-d77b-41b5755aff61">A server MAY support any encoding in the body of a HTTP PUT operation.</semantic__p>
</semantic__component>
</semantic__permission>

<semantic__requirement id="semantic__req_job-management_update_content-type" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/update/content-type</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___6f8135c0-4816-1362-85b6-38d24c8cd6ca">As per <semantic__xref target="semantic__rfc2616">HTTP 1.1</semantic__xref> (<semantic__link target="https://tools.ietf.org/html/rfc2616#section-14.17"/>) the ‘Content-Type’ header SHALL be used to indicate the media type of a request body containing the description of the replacement processes.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__clause id="semantic___ogc_api_processes_workflow_execute_request_body_2" obligation="normative">
<semantic__title>OGC API — Processes — Workflow Execute Request body</semantic__title>
<semantic__recommendation id="semantic__rec_job-management_update-ogcapi-processes" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/rec/job-management/update/body-ogcapi-processes</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___b67152c4-5050-6491-fe84-732ed2fc4e6e">If a job can be created from an rc_ogcapi-processes,OGC API — Processes — Workflow Execute Request&#x3e;&#x3e;, implementations SHOULD consider supporting the <semantic__xref target="semantic__rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</semantic__xref> encoding.</semantic__p>
</semantic__component>
</semantic__recommendation>
</semantic__clause>

<semantic__clause id="semantic___openeo_process_graph_body_2" obligation="normative">
<semantic__title>OpenEO Process Graph body</semantic__title>
<semantic__recommendation id="semantic__rec_job-management_update-openeo" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/rec/job-management/update/body-openeo</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___34bb6f7a-77a7-dd4c-54a6-66364e27cb10">If a job can be created from an <semantic__xref target="semantic__rc_openeo">OpenEO graph</semantic__xref>, implementations SHOULD consider supporting the <semantic__xref target="semantic__rc_openeo">OpenEO graph</semantic__xref> encoding.</semantic__p>
</semantic__component>
</semantic__recommendation>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___response_2" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__requirement id="semantic__req_job-management_update_response" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/update/response</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___241ad88a-5cac-8e62-356a-b76aa673aaa3">A successful execution of the operation SHALL be reported as a response with a HTTP status code <semantic__tt>200</semantic__tt> or <semantic__tt>204</semantic__tt>.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___78519526-578d-c177-533e-53c4edab51b5">If the operation is not executed immediately, but is added to a processing queue, the response SHALL have a HTTP status code <semantic__tt>202</semantic__tt>.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__p id="semantic___ded5f060-a72e-02ea-5962-c2717db716f2">The status code depends on the server. If the server has replaced the job, the response is either <semantic__tt>200</semantic__tt> (if the response includes additional content) or <semantic__tt>204</semantic__tt> (if the response has no additional content).</semantic__p>

<semantic__p id="semantic___15ad8117-f736-3d83-68c8-3a463bfe9734">If the server will process the replace request later, a <semantic__tt>202</semantic__tt> status code will be returned. In this case, the processing can succeed or fail, without further notification to the client.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___exceptions_2" obligation="normative">
<semantic__title>Exceptions</semantic__title>
<semantic__p id="semantic___b1de8587-4731-aa0d-c6d4-6e61a6765d34">See <semantic__xref target="semantic__job-management-http_status_codes"/> for general guidance.</semantic__p>

<semantic__p id="semantic___6d3bcfa1-17e6-5c03-e165-1a9a06833e48">If the request body’s media type is not supported by the server, see requirement /req/deploy-replace-undeploy/deploy/unsupported-media-type from <semantic__eref type="inline" bibitemid="semantic__OAProc-2" citeas="OGC 20-044"/>.</semantic__p>

<semantic__p id="semantic___20b999c8-2bf0-b5db-074d-c8e14a5a7c5d">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>.</semantic__p>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic__undeploy" obligation="normative">
<semantic__title>Staring a job</semantic__title>
<semantic__clause id="semantic___sequence_diagram_3" obligation="normative">
<semantic__title>Sequence diagram</semantic__title>
<semantic__p id="semantic___bfc814a4-fd71-ab8a-96f5-6b987c10317c">The following diagram illustrates the sequence diagram for starting the execution of a previously created jobs.</semantic__p>

<semantic__sourcecode id="semantic___68081d38-a701-96df-b8ec-80135827cb50">Client                                                        Server
  |                                                             |
  |  POST /jobs/{jobId}   HTTP/1.1                              |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 204 OK                                            |
  |&#x3c;------------------------------------------------------------|</semantic__sourcecode>

</semantic__clause>

<semantic__clause id="semantic___operation_3" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-management_start_start-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/start/start-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___9ce968b2-fe06-0322-8435-c89129922d4a">For every created jobs (path: <semantic__tt>/jobs/{jobId}/results</semantic__tt>), the server SHALL support the HTTP POST operation.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___169bce01-eaaf-bca5-c0d9-2df6652f33fb">The parameter <semantic__tt>jobId</semantic__tt> is each <semantic__tt>jobID</semantic__tt> property in the job list response (JSONPath: <semantic__tt>$.jobs[*].jobID</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___response_3" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__requirement id="semantic__req_job-management_start_response" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/job-management/start/response</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___5a710e6b-083e-24b1-d87e-0ba527b6c5e8">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___74515fe0-18aa-9bbd-d95f-c7efc8e28a08">A response SHALL be a document that conforms to statusInfo.yaml.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___exceptions_3" obligation="normative">
<semantic__title>Exceptions</semantic__title>
<semantic__p id="semantic___d7fff97d-7ce9-1791-a918-8d1ad7da5719">See <semantic__xref target="semantic__job-management-http_status_codes">HTTP status codes</semantic__xref> for general guidance.</semantic__p>

<semantic__p id="semantic___f44618b8-c7b5-3f44-d304-88519570c92a">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>.</semantic__p>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic__job-management-definition" obligation="normative">
<semantic__title>Job definition</semantic__title>
<semantic__p id="semantic___f99a683d-150f-4e8f-44a5-eab92da69c22">For every job, it is possible to retrieve its original definition. It corresponds to the request’s body used to create or update the jobs.</semantic__p>

<semantic__clause id="semantic___operation_4" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_deploy-replace-undeploy_package_get-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/deploy-replace-undeploy/package/get-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___ceb25f7b-3bc0-4050-5a8c-8bae1c7a2e05">For every dynamically added process (using method: POST on path: /processes/{processId}), the server SHALL support the HTTP GET operation at the path <semantic__tt>/processes/{processId}/package</semantic__tt>.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___96d622e0-ef54-236d-f457-96e02e9f4259">The parameter <semantic__tt>processId</semantic__tt> is each <semantic__tt>id</semantic__tt> property in the process collection response (JSONPath: <semantic__tt>$.processes[*].id</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___response_4" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__clause id="semantic___overview_3" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__req_deploy-replace-undeploy_package_response-success" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/deploy-replace-undeploy/package/response-success</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___6e972738-8761-d2d6-e36a-71bde82f2288">A successful access to the resource SHALL be reported as a response with a HTTP status code <semantic__tt>200</semantic__tt>.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__requirement id="semantic__req_deploy-replace-undeploy_package_response-body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/deploy-replace-undeploy/package/response-body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___1976e033-bb0e-3ab6-02e2-5845ee499f81">A response with HTTP status code <semantic__tt>200</semantic__tt> SHALL include a body that contains the request body used to create or update the job.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___exceptions_4" obligation="normative">
<semantic__title>Exceptions</semantic__title>
<semantic__p id="semantic___0b6b2a32-f192-cf75-1790-0285a91f2ea8">See <semantic__xref target="semantic__deploy-replace-undeploy-http_status_codes">HTTP status codes</semantic__xref> for general guidance.</semantic__p>

<semantic__p id="semantic___c3db8b0a-f738-f72b-43db-39a4d5809365">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>.</semantic__p>
</semantic__clause>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___requirements_class_ogc_api_process_workflow_execute_request" obligation="normative">
<semantic__title>Requirements Class “OGC API — Process — Workflow Execute Request”</semantic__title>
<semantic__clause id="semantic__ogcapi-processes-overview" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__rc_ogcapi-processes" model="ogc" type="class" obligation="requirement"> <semantic__subject>Web API</semantic__subject><semantic__inherit><semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core</semantic__eref></semantic__inherit><semantic__inherit><semantic__xref target="semantic__rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</semantic__xref></semantic__inherit><semantic__classification><semantic__tag>label</semantic__tag><semantic__value><semantic__link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/ogcapi-processes"/></semantic__value></semantic__classification>
</semantic__requirement>

<semantic__p id="semantic___7952c7d5-e769-9ca2-cb9e-ff974e8ee323">This requirements class defines that the OGC API — Process — Workflow Execute Request is supported as an encoding for job definitions.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___ogc_api_processes" obligation="normative">
<semantic__title>OGC API — Processes</semantic__title>
<semantic__clause id="semantic___overview_4" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__req_ogcapi-processes_schema" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/ogcapi-processes/schema</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___45d6ad49-ec36-d83b-b4a7-73d9217d60b1">An <semantic__tt>OGC API - Processes</semantic__tt> document SHALL be based upon the JSON schema <semantic__link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-workflows/execute-workflows.yaml">execute-workflow.yaml</semantic__link>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___create" obligation="normative">
<semantic__title>Create</semantic__title>
<semantic__clause id="semantic___ogc_api_processes_body" obligation="normative">
<semantic__title>OGC API — Processes body</semantic__title>
<semantic__requirement id="semantic__req_ogcapi-processes_create_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/ogcapi-processes/create/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___5e485077-1425-4eb3-7533-fbbb2da2f9a1">The body of the POST request SHALL be based upon the OpenAPI 3.0 schema <semantic__link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-workflows/execute-workflows.yaml">execute-workflows.yaml</semantic__link></semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___ab1eeff1-70f7-c915-b00a-eebd22c95f91">The media type <semantic__tt>application/json</semantic__tt> SHALL be used to indicate that request body contains a processes description encoded as an <semantic__xref target="semantic__rc_ogcapi-processes">OGC API — Processes</semantic__xref>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___update" obligation="normative">
<semantic__title>Update</semantic__title>
<semantic__clause id="semantic___ogc_api_processes_body_2" obligation="normative">
<semantic__title>OGC API — Processes body</semantic__title>
<semantic__requirement id="semantic__req_ogcapi-processes_update__body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/ogcapi-processes/update/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___5d2a883d-a66b-6f99-5111-ebcef6e06ad0">The media type <semantic__tt>application/ogcapi-processes+json</semantic__tt> SHALL be used to indicate that request body contains a job encoded as an <semantic__xref target="semantic__rc_openeo">OGC API — Processes</semantic__xref>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___job_definition" obligation="normative">
<semantic__title>Job definition</semantic__title>
<semantic__clause id="semantic___ogc_api_processes_content" obligation="normative">
<semantic__title>OGC API — Processes content</semantic__title>
<semantic__requirement id="semantic__req_ogcapi-processes_definition_response-body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/ogcapi-processes/definition/response-body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___cfaab0d8-3078-e09d-33fc-37acc37e0bd1">A response with HTTP status code <semantic__tt>200</semantic__tt> SHALL include a body that contains the <semantic__xref target="semantic__rc_ogcapi-processes">OGC API — Processes</semantic__xref> to use to deploy the process.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___requirements_class_openeo_process_graph" obligation="normative">
<semantic__title>Requirements Class “OpenEO Process Graph”</semantic__title>
<semantic__clause id="semantic__openeo-overview" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__rc_openeo" model="ogc" type="class" obligation="requirement"> <semantic__subject>Web API</semantic__subject><semantic__inherit><semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core</semantic__eref></semantic__inherit><semantic__inherit><semantic__xref target="semantic__rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</semantic__xref></semantic__inherit><semantic__classification><semantic__tag>label</semantic__tag><semantic__value><semantic__link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/openeo"/></semantic__value></semantic__classification>
</semantic__requirement>

<semantic__p id="semantic___63d175f2-a2df-8253-0412-5119311b0c21">This requirements class defines that the server supports the OpenEO Process Graph as an encoding for job definitions.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___openeo_process_graph" obligation="normative">
<semantic__title>OpenEO Process Graph</semantic__title>
<semantic__clause id="semantic___overview_5" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__req_openeo_schema" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/openeo/schema</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___337656e1-5fb9-3b2b-e9fe-4fa635fb0cd3">An <semantic__tt>OpenEO Process Graph</semantic__tt> document SHALL be based upon the JSON schema <semantic__link target="https://raw.githubusercontent.com/Open-EO/openeo-processes/master/meta/subtype-schemas.json#/definitions/process-graph"/>.</semantic__p>
</semantic__component>
</semantic__requirement>

<semantic__sourcecode id="semantic__schema_ogcappkg" lang="yaml">
<semantic__name><semantic__link target="http://schemas.opengis.net/ogcapi/processes/part4/1.0/openapi/schemas/openeo-process-graph.yaml">Schema for OpenEO Process Graph</semantic__link></semantic__name>
type: object
additionalProperties:
  type: object
  required: 
    - process_id
    - arguments
  properties:
    process_id:
      type: string
    arguments: {}</semantic__sourcecode>

</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___create_2" obligation="normative">
<semantic__title>Create</semantic__title>
<semantic__clause id="semantic___openeo_body" obligation="normative">
<semantic__title>OpenEO body</semantic__title>
<semantic__requirement id="semantic__req_openeo_create_body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/openeo/create/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___bdbd5f33-8da8-9bfc-34e6-ba1bae6a466e">The media type <semantic__tt>application/openeo+json</semantic__tt> SHALL be used to indicate that request body contains a processes description encoded as an <semantic__xref target="semantic__rc_openeo">OpenEO Process Graph</semantic__xref>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___update_2" obligation="normative">
<semantic__title>Update</semantic__title>
<semantic__clause id="semantic___openeo_body_2" obligation="normative">
<semantic__title>OpenEO body</semantic__title>
<semantic__requirement id="semantic__req_openeo_update__body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/openeo/update/body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___876ff18e-23b7-5c8c-7eed-cbc75301c932">The media type <semantic__tt>application/openeo+json</semantic__tt> SHALL be used to indicate that request body contains a job encoded as an <semantic__xref target="semantic__rc_openeo">OpenEO Process Graph</semantic__xref>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___job_definition_2" obligation="normative">
<semantic__title>Job definition</semantic__title>
<semantic__clause id="semantic___openeo_content" obligation="normative">
<semantic__title>OpenEO content</semantic__title>
<semantic__requirement id="semantic__req_openeo_definition_response-body" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/openeo/definition/response-body</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___e1e31161-ce57-0b00-d251-3020f07cec83">A response with HTTP status code <semantic__tt>200</semantic__tt> SHALL include a body that contains the <semantic__xref target="semantic__rc_openeo">OpenEO Process Graph</semantic__xref> to use to deploy the process.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___requirements_class_quotation" obligation="normative">
<semantic__title>Requirements Class “Quotation”</semantic__title>
<semantic__clause id="semantic__quotation-overview" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__requirement id="semantic__rc_quotation" model="ogc" type="class" obligation="requirement"> <semantic__subject>Web API</semantic__subject><semantic__inherit><semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core</semantic__eref></semantic__inherit><semantic__inherit><semantic__xref target="semantic__rc_jb-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</semantic__xref></semantic__inherit><semantic__inherit><semantic__xref target="semantic__rc_openeo">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/openeo</semantic__xref></semantic__inherit><semantic__classification><semantic__tag>label</semantic__tag><semantic__value><semantic__link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/quotation"/></semantic__value></semantic__classification>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___requirements_class_provenance" obligation="normative">
<semantic__title>Requirements Class “Provenance”</semantic__title>
<semantic__clause id="semantic__provenance-overview" obligation="normative">
<semantic__title>Overview</semantic__title>
<semantic__p id="semantic___7b50b458-a999-e5e6-508d-5538add41719">This requirements class defines how to allow client application accessing the provenance of a job run.</semantic__p>

<semantic__requirement id="semantic__rc_cwl" model="ogc" type="class" obligation="requirement"> <semantic__subject>Web API</semantic__subject><semantic__inherit><semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2">OGC API — Processes — Part 1: Core</semantic__eref></semantic__inherit><semantic__classification><semantic__tag>label</semantic__tag><semantic__value><semantic__link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/provenance"/></semantic__value></semantic__classification>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___additional_endpoints" obligation="normative">
<semantic__title>Additional endpoints</semantic__title>
<semantic__clause id="semantic___inputs" obligation="normative">
<semantic__title>Inputs</semantic__title>
<semantic__p id="semantic___c486102c-cf9e-6946-6c98-16700e561269">The server MUST provide an endpoint to retrieve the inputs of a job run.</semantic__p>

<semantic__clause id="semantic___operation_5" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-provenance_inputs_get-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/provenance/inputs/get-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___90eb321b-ee83-ded5-0dab-8c88260357aa">For every created jobs (path: <semantic__tt>/jobs/{jobId}/inputs</semantic__tt>), the server SHALL support the HTTP GET operation.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___287015a8-794e-3c63-2c63-7f848adad311">The parameter <semantic__tt>jobId</semantic__tt> is each <semantic__tt>jobID</semantic__tt> property in the job list response (JSONPath: <semantic__tt>$.jobs[*].jobID</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___response_5" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__requirement id="semantic__req_provenance_inputs_response" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/provenance/inputs/response</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___7e275ca3-b841-6d5d-c6d4-67433523338e">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___eb6b45b9-9bd5-1edd-733a-d7bd87ea84b9">The response SHALL contains a JSON document that conforms to the schema <semantic__link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-job-management/inputs.yaml">inputs.yaml</semantic__link>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___outputs" obligation="normative">
<semantic__title>Outputs</semantic__title>
<semantic__p id="semantic___7922e547-a3ea-163d-eead-6a0cdcecf21d">The server MUST provide an endpoint to retrieve the outputs of a job run.</semantic__p>

<semantic__clause id="semantic___operation_6" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-provenance_outputs_get-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/provenance/outputs/get-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___6343c277-4ad1-9f62-01bf-be572a88a51a">For every created jobs (path: <semantic__tt>/jobs/{jobId}/outputs</semantic__tt>), the server SHALL support the HTTP GET operation.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___dc3be4d9-6007-9428-9800-fe6afe24df32">The parameter <semantic__tt>jobId</semantic__tt> is each <semantic__tt>jobID</semantic__tt> property in the job list response (JSONPath: <semantic__tt>$.jobs[*].jobID</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>

<semantic__clause id="semantic___response_6" obligation="normative">
<semantic__title>Response</semantic__title>
<semantic__requirement id="semantic__req_provenance_outputs_response" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/provenance/outputs/response</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___f291af7f-17e8-80d4-7060-82c4b75cdb78">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___f0d56038-a40b-7e4c-44d1-1287d91051e0">The response SHALL contains a JSON document that conforms to the schema <semantic__link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-job-management/outputs.yaml">outputs.yaml</semantic__link>.</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic___run" obligation="normative">
<semantic__title>Run</semantic__title>
<semantic__p id="semantic___10286264-12ea-97be-6393-6f8cdc54c36d">The server MUST provide an endpoint to retrieve the run of a job.</semantic__p>

<semantic__clause id="semantic___operation_7" obligation="normative">
<semantic__title>Operation</semantic__title>
<semantic__requirement id="semantic__req_job-provenance_run_get-op" model="ogc"> <semantic__classification><semantic__tag>label</semantic__tag><semantic__value>/req/provenance/run/get-op</semantic__value></semantic__classification><semantic__component class="part"><semantic__p id="semantic___191ceab5-cff3-fdd9-ef65-243c623c953c">For every created jobs (path: <semantic__tt>/jobs/{jobId}/run</semantic__tt>), the server SHALL support the HTTP GET operation.</semantic__p>
</semantic__component><semantic__component class="part"><semantic__p id="semantic___d316a2b6-8786-661b-1ff6-4612609b55de">The parameter <semantic__tt>jobId</semantic__tt> is each <semantic__tt>jobID</semantic__tt> property in the job list response (JSONPath: <semantic__tt>$.jobs[*].jobID</semantic__tt>).</semantic__p>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>
</semantic__clause>
</semantic__clause>

<semantic__clause id="semantic__oas" obligation="normative">
<semantic__title>OpenAPI 3.0</semantic__title>
<semantic__p id="semantic___f2182161-14f5-1278-0393-98697bdc5aa6">See <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>, Clause 9.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic__mediatypes" obligation="normative">
<semantic__title>Media Types</semantic__title>
<semantic__p id="semantic___098b4c2f-4385-5f19-1e11-9951a90f18bd">See <semantic__eref type="inline" bibitemid="semantic__OAProc-1" citeas="OGC 18-062r2"/>, Clause 13.</semantic__p>

<semantic__p id="semantic___322857d8-caae-2a87-da41-31bc6dc85c35">Additional JSON media types that would typically be used in a server that supports JSON are:</semantic__p>

<semantic__ul id="semantic___0c50a327-a311-5196-8ee0-7f3ba59bc2fb"><semantic__li><semantic__p id="semantic___6be26d34-4d0a-bdad-b6bc-fa884aa58646">application/ogcapppkg+json</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___1c0f0d10-e13e-464b-ad67-4544e2f1aca6">application/cwl+json</semantic__p>
</semantic__li>
</semantic__ul>

<semantic__p id="semantic___e79b5e86-73ec-38d0-a774-4a92d8514082">Additional CWL media types that would typically be used in a server that supports CWL are:</semantic__p>

<semantic__ul id="semantic___8e86722f-3cf2-e97e-75ee-9770469d6470"><semantic__li><semantic__p id="semantic___9caa56e4-4db4-5d1a-a41a-7adff9875fa7">application/cwl</semantic__p>
</semantic__li>
</semantic__ul>
</semantic__clause>








</semantic__sections><semantic__annex id="semantic__ats" obligation="normative">
<semantic__title>Abstract Test Suite</semantic__title>
<semantic__clause id="semantic___introduction" obligation="normative">
<semantic__title>Introduction</semantic__title>
<semantic__p id="semantic___02eeb7e2-ae07-7102-1d39-d9b06be62432">OGC Web Application Programming Interfaces (APIs) are not Web Services in the traditional sense. Rather, they define the behavior and content of a set of Resources exposed through a Web API. Therefore, an API endpoint may expose resources in addition to those defined by the standard. A test engine must be able to traverse an implementation of the API, identify and validate test points, and ignore resource paths which are not to be tested.</semantic__p>

<semantic__p id="semantic___2f8f86b6-6e1a-0247-e640-59b0185eda41">The Web API under test can require authorization. Any Executable Test Suite implementing this test suite should implement the following security schemes supported by OpenAPI 3.0: HTTP Authorization schemes “basic” and “bearer”, API keys, and OAuth2 flow “authorizationCode”.</semantic__p>
</semantic__clause>

<semantic__clause id="semantic___conformance_class_deploy_replace_undeploy" obligation="normative">
<semantic__title>Conformance Class Deploy, Replace, Undeploy</semantic__title>
<semantic__requirement id="semantic__ats_dru" model="ogc" type="conformanceclass">
<semantic__title>Job Management</semantic__title><semantic__identifier>http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</semantic__identifier><semantic__subject><semantic__xref target="semantic__rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</semantic__xref></semantic__subject><semantic__classification><semantic__tag>Target Type</semantic__tag><semantic__value>Web API</semantic__value></semantic__classification><semantic__requirement id="semantic___a86d877f-b639-4c33-aaf0-aafbda999bc2" model="ogc" type="verification"> <semantic__identifier>/conf/dru/deploy/post-op</semantic__identifier></semantic__requirement>

</semantic__requirement>

<semantic__clause id="semantic___create_operation" obligation="normative">
<semantic__title>Create operation</semantic__title>
<semantic__requirement id="semantic__ats_dru_deploy_post-op" model="ogc" type="abstracttest"> <semantic__identifier>/conf/jm/create/post-op</semantic__identifier><semantic__classification><semantic__tag>target</semantic__tag><semantic__value><semantic__xref target="semantic__req_job-management_create_post-op">/req/job-management/create/post-op</semantic__xref></semantic__value></semantic__classification><semantic__component class="test-purpose"><semantic__p id="semantic___cc03f424-278b-0166-2639-4f077846924c">Validate that the server support HTTP POST operation at the path /jobs/</semantic__p>
</semantic__component><semantic__component class="test-method"><semantic__ol id="semantic___d296b973-7b89-1c7b-4079-d52afd0bac80" type="arabic"><semantic__li><semantic__p id="semantic___53b3fea3-d9a0-bc6b-05c9-b80cfd8a7ae8">Construct a path for each “rel=http://www.opengis.net/def/rel/ogc/1.0/job-list” link on the landing page as well as for the {root}/jobs path.</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___fc72724e-f13a-c143-3f82-e72502e115b7">Issue an HTTP POST request for each path.</semantic__p>
</semantic__li>
<semantic__li><semantic__p id="semantic___045cef93-6c04-6d7b-1ea8-aa85e3dfdd92">Validate that the response header does not contain <semantic__tt>405 Method not allowed</semantic__tt></semantic__p>
</semantic__li>
</semantic__ol>
</semantic__component>
</semantic__requirement>
</semantic__clause>
</semantic__clause>
</semantic__annex><semantic__annex id="semantic___revision_history" obligation="informative">
<semantic__title>Revision History</semantic__title>
<semantic__table id="semantic___1af3e526-b98d-61df-00c5-7c89dc3c51a2" unnumbered="true"><semantic__colgroup><semantic__col width="12%"/><semantic__col width="18%"/><semantic__col width="12%"/><semantic__col width="12%"/><semantic__col width="46%"/></semantic__colgroup><semantic__thead><semantic__tr><semantic__th valign="middle" align="left">Date</semantic__th>
<semantic__th valign="middle" align="left">Release</semantic__th>
<semantic__th valign="middle" align="left">Editor</semantic__th>
<semantic__th valign="middle" align="left">Primary clauses modified</semantic__th>
<semantic__th valign="middle" align="left">Description</semantic__th>
</semantic__tr></semantic__thead>
<semantic__tbody><semantic__tr><semantic__td valign="middle" align="left">2024-08-22</semantic__td>
<semantic__td valign="middle" align="left">None</semantic__td>
<semantic__td valign="middle" align="left">Gérald Fenoy</semantic__td>
<semantic__td valign="middle" align="left">all</semantic__td>
<semantic__td valign="middle" align="left">Boostraping the document</semantic__td>
</semantic__tr></semantic__tbody>
</semantic__table>
</semantic__annex><semantic__bibliography><semantic__references id="semantic___references" normative="true" obligation="informative">
<semantic__title>Normative references</semantic__title><semantic__p id="semantic___307b20e2-9e40-db56-abbf-2822ab2941cc">The following documents are referred to in the text in such a way that some or all of their content constitutes requirements of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies.</semantic__p>
<semantic__bibitem id="semantic__OAProc-1" type="standard" schema-version="v1.2.9">
  <semantic__fetched>2024-08-29</semantic__fetched>
  
<semantic__title type="title-intro" format="text/plain" language="en" script="Latn">OGC API</semantic__title>

  
<semantic__title type="title-main" format="text/plain" language="en" script="Latn">Processes</semantic__title>

  
<semantic__title type="title-part" format="text/plain" language="en" script="Latn">Part 1: Core</semantic__title>

  
<semantic__title type="main" format="text/plain" language="en" script="Latn">OGC API — Processes — Part 1: Core</semantic__title>

  <semantic__uri type="src">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</semantic__uri>
  <semantic__uri type="obp">https://docs.ogc.org/is/18-062r2/18-062r2.html</semantic__uri>
  <semantic__docidentifier type="OGC" primary="true">OGC 18-062r2</semantic__docidentifier><semantic__docidentifier scope="biblio-tag">OGC 18-062r2</semantic__docidentifier>
  <semantic__date type="published">
    <semantic__on>2021-12-20</semantic__on>
  </semantic__date>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Benjamin Pross</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Panagiotis (Peter) A. Vretanos</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="publisher"/>
    <semantic__organization>
      
<semantic__name>Open Geospatial Consortium</semantic__name>

    </semantic__organization>
  </semantic__contributor>
  <semantic__edition>2</semantic__edition>
  <semantic__language>en</semantic__language>
  <semantic__script>Latn</semantic__script>
  <semantic__abstract format="text/plain" language="en" script="Latn">The OGC API — Processes — Part 1: Core Standard supports the wrapping of computational tasks into executable processes that can be offered by a server through a Web API and be invoked by a client application. The standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The standard leverages concepts from the OGC Web Processing Service (WPS) 2.0 Interface Standard but does not require implementation of a WPS.

By way of background and context, in many cases geospatial or location data, including data from sensors, must be processed before the information can be effectively used. The WPS Standard provides a standard interface that simplifies the task of making simple or complex computational geospatial processing services accessible via web services. Such services include well-known processes found in Geographic Information Systems (GIS) as well as specialized processes for spatiotemporal modeling and simulation. While the WPS standard was designed with spatial processing in mind, the standard could also be used to readily insert non-spatial processing tasks into a web services environment.

The OGC API — Processes Standard is a newer and more modern way of programming and interacting with resources over the web while allowing better integration into existing software packages. The OGC API — Processes Standard addresses all of the use cases that were addressed by the WPS Standard, while also leveraging the OpenAPI specification and a resource-oriented approach.

The resources that are provided by a server implementing the OGC API — Processes Standard are listed in Table 1 below and include information about the server, the list of available processes (Process list and Process description), jobs (running processes) and results of process executions.</semantic__abstract>
  
</semantic__bibitem>
<semantic__bibitem id="semantic__OAProc-2"><semantic__formattedref format="application/x-isodoc+xml">Pross, B.: OGC 18-062, <semantic__strong>OGC API — Processes — Part 2: Deploy, Replace, Undeploy</semantic__strong></semantic__formattedref><semantic__docidentifier type="OGC">OGC 20-044</semantic__docidentifier><semantic__docidentifier scope="biblio-tag">OGC 20-044</semantic__docidentifier><semantic__docnumber>20-044</semantic__docnumber></semantic__bibitem>
<semantic__bibitem id="semantic__OAProc-3" type="standard" schema-version="v1.2.9">
  <semantic__fetched>2024-08-29</semantic__fetched>
  
<semantic__title type="title-intro" format="text/plain" language="en" script="Latn">OGC API</semantic__title>

  
<semantic__title type="title-main" format="text/plain" language="en" script="Latn">Processes</semantic__title>

  
<semantic__title type="title-part" format="text/plain" language="en" script="Latn">Part 1: Core</semantic__title>

  
<semantic__title type="main" format="text/plain" language="en" script="Latn">OGC API — Processes — Part 1: Core</semantic__title>

  <semantic__uri type="src">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</semantic__uri>
  <semantic__uri type="obp">https://docs.ogc.org/is/18-062r2/18-062r2.html</semantic__uri>
  <semantic__docidentifier type="OGC" primary="true">OGC 18-062r2</semantic__docidentifier><semantic__docidentifier scope="biblio-tag">OGC 18-062r2</semantic__docidentifier>
  <semantic__date type="published">
    <semantic__on>2021-12-20</semantic__on>
  </semantic__date>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Benjamin Pross</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Panagiotis (Peter) A. Vretanos</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="publisher"/>
    <semantic__organization>
      
<semantic__name>Open Geospatial Consortium</semantic__name>

    </semantic__organization>
  </semantic__contributor>
  <semantic__edition>2</semantic__edition>
  <semantic__language>en</semantic__language>
  <semantic__script>Latn</semantic__script>
  <semantic__abstract format="text/plain" language="en" script="Latn">The OGC API — Processes — Part 1: Core Standard supports the wrapping of computational tasks into executable processes that can be offered by a server through a Web API and be invoked by a client application. The standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The standard leverages concepts from the OGC Web Processing Service (WPS) 2.0 Interface Standard but does not require implementation of a WPS.

By way of background and context, in many cases geospatial or location data, including data from sensors, must be processed before the information can be effectively used. The WPS Standard provides a standard interface that simplifies the task of making simple or complex computational geospatial processing services accessible via web services. Such services include well-known processes found in Geographic Information Systems (GIS) as well as specialized processes for spatiotemporal modeling and simulation. While the WPS standard was designed with spatial processing in mind, the standard could also be used to readily insert non-spatial processing tasks into a web services environment.

The OGC API — Processes Standard is a newer and more modern way of programming and interacting with resources over the web while allowing better integration into existing software packages. The OGC API — Processes Standard addresses all of the use cases that were addressed by the WPS Standard, while also leveraging the OpenAPI specification and a resource-oriented approach.

The resources that are provided by a server implementing the OGC API — Processes Standard are listed in Table 1 below and include information about the server, the list of available processes (Process list and Process description), jobs (running processes) and results of process executions.</semantic__abstract>
  
</semantic__bibitem>
<semantic__bibitem id="semantic__OAFeat-1" type="standard" schema-version="v1.2.9">
  <semantic__fetched>2024-08-29</semantic__fetched>
  
<semantic__title type="title-intro" format="text/plain" language="en" script="Latn">OGC API</semantic__title>

  
<semantic__title type="title-main" format="text/plain" language="en" script="Latn">Features</semantic__title>

  
<semantic__title type="title-part" format="text/plain" language="en" script="Latn">Part 1: Core</semantic__title>

  
<semantic__title type="main" format="text/plain" language="en" script="Latn">OGC API — Features — Part 1: Core</semantic__title>

  <semantic__uri type="src">http://www.opengis.net/doc/IS/ogcapi-features-1/1.0.0</semantic__uri>
  <semantic__uri type="obp">https://docs.ogc.org/is/17-069r3/17-069r3.html</semantic__uri>
  <semantic__docidentifier type="OGC" primary="true">OGC 17-069r3</semantic__docidentifier><semantic__docidentifier scope="biblio-tag">OGC 17-069r3</semantic__docidentifier>
  <semantic__date type="published">
    <semantic__on>2019-10-07</semantic__on>
  </semantic__date>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Clemens Portele</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Panagiotis (Peter) A. Vretanos</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="author"/>
    <semantic__person>
      
<semantic__name>  <semantic__completename>Charles Heazel</semantic__completename> </semantic__name>

    </semantic__person>
  </semantic__contributor>
  <semantic__contributor>
    <semantic__role type="publisher"/>
    <semantic__organization>
      
<semantic__name>Open Geospatial Consortium</semantic__name>

    </semantic__organization>
  </semantic__contributor>
  <semantic__edition>3</semantic__edition>
  <semantic__language>en</semantic__language>
  <semantic__script>Latn</semantic__script>
  <semantic__abstract format="text/plain" language="en" script="Latn">OGC API standards define modular API building blocks to spatially enable Web APIs in a consistent way. The OpenAPI specification is used to define the API building blocks.

The OGC API family of standards is organized by resource type. This standard specifies the fundamental API building blocks for interacting with features. The spatial data community uses the term ‘feature’ for things in the real world that are of interest.</semantic__abstract>
  
</semantic__bibitem>
</semantic__references><semantic__references id="semantic__Bibliography" normative="false" obligation="informative">
<semantic__title>Bibliography</semantic__title><semantic__bibitem id="semantic__OpenAPI-Spec">
  <semantic__formattedref format="application/x-isodoc+xml">OpenAPI Initiative. OpenAPI Specification 3.0.2. Available at:
<semantic__link target="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md"/>.</semantic__formattedref>
  <semantic__docidentifier>OpenAPI Specification 3.0.2</semantic__docidentifier><semantic__docidentifier scope="biblio-tag">OpenAPI Specification 3.0.2</semantic__docidentifier>
  <semantic__docnumber>3.0.2</semantic__docnumber>
</semantic__bibitem><semantic__bibitem id="semantic__Common_Workflow_Language">
  <semantic__formattedref format="application/x-isodoc+xml">Peter Amstutz, Michael R. Crusoe, Nebojša Tijanić (editors), Brad Chapman, John Chilton, Michael Heuer, Andrey Kartashov, Dan Leehr, Hervé Ménager, Maya Nedeljkovich, Matt Scales, Stian Soiland-Reyes, Luka Stojanovic (2020): Common Workflow Language, v1.2. Specification, Common Workflow Language working group. <semantic__link target="https://w3id.org/cwl/"/></semantic__formattedref>
  <semantic__docidentifier type="metanorma">[2]</semantic__docidentifier>
</semantic__bibitem><semantic__bibitem id="semantic__OpenEO_Process_Graphs">
  <semantic__formattedref format="application/x-isodoc+xml">OpenEO: OpenEO Developers API Reference / Process Graphs. <semantic__link target="https://openeo.org/documentation/1.0/developers/api/reference.html#section/Processes/Process-Graphs"/></semantic__formattedref>
  <semantic__docidentifier type="metanorma">[3]</semantic__docidentifier>
</semantic__bibitem>



</semantic__references></semantic__bibliography>
</semantic__ogc-standard></source></metanorma><render><preprocess-xslt format="xml">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'passthrough']">
  <xsl:if test="contains(@formats,',xml,')"> <!-- delimited -->
  <xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy>
  </xsl:if>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>

<preprocess-xslt format="xml">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'math-with-linebreak']">

</xsl:template>
<xsl:template match="*[local-name() = 'math-no-linebreak']">
<xsl:apply-templates select="node()"/>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>

<preprocess-xslt format="html">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'passthrough']">
  <xsl:if test="contains(@formats,',html,')"> <!-- delimited -->
  <xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy>
  </xsl:if>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>

<preprocess-xslt format="html">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'math-with-linebreak']">

</xsl:template>
<xsl:template match="*[local-name() = 'math-no-linebreak']">
<xsl:apply-templates select="node()"/>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>

<preprocess-xslt format="pdf">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'passthrough']">
  <xsl:if test="contains(@formats,',pdf,')"> <!-- delimited -->
  <xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy>
  </xsl:if>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>

<preprocess-xslt format="pdf">
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.w3.org/1999/xhtml" version="1.0">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
  <xsl:template match="@* | node()"><xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy></xsl:template>
<xsl:template match="*[local-name() = 'math-with-linebreak']">

</xsl:template>
<xsl:template match="*[local-name() = 'math-no-linebreak']">
<xsl:apply-templates select="node()"/>
</xsl:template>

</xsl:stylesheet>

</preprocess-xslt>
<preprocess-xslt>
  <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:mn="https://www.metanorma.org/ns/ogc" version="1.0">
    <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="no"/>
    <xsl:preserve-space elements="*"/>
    <xsl:template match="@* | node()">
      <xsl:copy><xsl:apply-templates select="@* | node()"/></xsl:copy>
    </xsl:template>
    <xsl:template match="mn:note/mn:name">
      <xsl:copy><xsl:apply-templates select="@*|node()"/><xsl:if test="normalize-space() != ''">:<mn:tab/></xsl:if></xsl:copy>
    </xsl:template>
  </xsl:stylesheet>
</preprocess-xslt>

</render><source-highlighter-css>sourcecode table td { padding: 5px; }
sourcecode table pre { margin: 0; }
sourcecode, sourcecode .w {
  color: #444444;
}
sourcecode .cp {
  color: #CC00A3;
}
sourcecode .cs {
  color: #CC00A3;
}
sourcecode .c, sourcecode .ch, sourcecode .cd, sourcecode .cm, sourcecode .cpf, sourcecode .c1 {
  color: #1E90FF;
}
sourcecode .kc {
  color: #C34E00;
}
sourcecode .kd {
  color: #0000FF;
}
sourcecode .kr {
  color: #007575;
}
sourcecode .k, sourcecode .kn, sourcecode .kp, sourcecode .kt, sourcecode .kv {
  color: #0000FF;
}
sourcecode .s, sourcecode .sb, sourcecode .sc, sourcecode .ld, sourcecode .sd, sourcecode .s2, sourcecode .se, sourcecode .sh, sourcecode .si, sourcecode .sx, sourcecode .sr, sourcecode .s1, sourcecode .ss {
  color: #009C00;
}
sourcecode .sa {
  color: #0000FF;
}
sourcecode .nb, sourcecode .bp {
  color: #C34E00;
}
sourcecode .nt {
  color: #0000FF;
}
</source-highlighter-css></metanorma-extension>
<boilerplate><copyright-statement>

<clause id="_copyright_notice" obligation="normative">
<title depth="1">Copyright notice</title>
<p id="_b4a0191a-6824-1f33-66b1-2183d2dbf5a5" align="center">Copyright © 2019 Open Geospatial Consortium<br/> To obtain additional rights of use, visit<link target="https://www.ogc.org/legal"/></p>
</clause>

<clause id="_note" obligation="normative">
<title depth="1">Note</title>
<p id="_11e88dba-9912-1a89-a82d-7291bf232191" align="left">Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The Open Geospatial Consortium shall not be held responsible for identifying any or all such patent rights.</p>

<p id="_15067213-c07b-cba0-7e18-395ab2e00ab3" align="left">Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of the standard set forth in this document, and to provide supporting documentation.</p>
</clause>
</copyright-statement>

<license-statement>

<clause id="_license_agreement" obligation="normative">
<title depth="1">License Agreement</title>
<p id="_f5fe34fd-12e2-2bb7-8cd6-9d4cffa96538">Use of this document is subject to the license agreement at <link target="https://www.ogc.org/license"/></p>
</clause>
</license-statement>

<legal-statement>

<clause id="_notice_for_drafts" obligation="normative">
<title depth="1">Notice for Drafts</title>
<p id="_09caafd2-d047-3050-9095-b3f182faf86f">This document is not an OGC Standard. This document is distributed for review and comment. This document is subject to change without notice and may not be referred to as an OGC Standard.</p>

<p id="_d80fd0eb-fbfd-dec3-0ddb-92472f4d5fcf">Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.</p>
</clause>
</legal-statement>

<feedback-statement>

<clause id="boilerplate-standard-feedback" obligation="normative">
<p id="_bb5602d2-6eb1-e557-e221-499759fe237f">Suggested additions, changes and comments on this document are welcome and encouraged. Such suggestions may be submitted using the online change request form on OGC web site: <link target="http://ogc.standardstracker.org/"/></p>
</clause>
</feedback-statement>
</boilerplate><preface><clause type="toc" id="_6b0927d3-9863-407e-8909-964963df32ed" displayorder="1"><title depth="1">Contents</title></clause>
<abstract id="_abstract" displayorder="2"><title depth="1">I.<tab/>Abstract</title><p id="_f348fa41-f40d-e2a5-87f1-f9c8f83679ef">OGC API Standards define modular API building blocks to spatially enable Web APIs in a consistent way. The <xref type="inline" target="OpenAPI-Spec">OpenAPI specification</xref> is used to define the API building blocks.</p>

<p id="_aec4597b-4c71-399d-eae5-9b1c5a712b8a">The OGC API Processes Standard (aka Processes API) defines API building blocks to describe, execute, monitor and retrieve results of Web-accessible processes. OGC API Processes is comprised of multiple parts, each of them is a separate OGC Standard.</p>

<p id="_2e00133c-e259-2cce-0e6c-ed22fcbc7d44">The OGC API — Processes — Part 2: Deploy, Replace, Undeploy draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to dynamically add, modify and/or delete individual processes using an implementation (endpoint) of the OGC API — Processes Standard.</p>

<p id="_77eea8d7-cef8-cd53-9b25-cf8c56a56776">The OGC API — Processes — Part 3: Workflows draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to …​</p>

<p id="_55c88114-2158-cd12-3cac-94ce0b061570">The OGC API — Processes — Part 4: Job Management draft specification extends the core capabilities specified in OGC API — Processes — Part 1: Core [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] with the ability to create, manage and monitor jobs that are associated with processes execution. This part of the standard also defines how to ensure provenance information is preserved and findable.</p>

<admonition id="_bf3e680c-8523-1367-cbfe-0c0ecf4ba94b" type="caution"><name>CAUTION</name><p id="_3c54f463-04ab-6afb-b48c-b91e28f09168">This is a DRAFT version of the 2nd part of the OGC API — Processes standards. This draft is not complete and there are open issues that are still under discussion.</p>
</admonition></abstract><clause id="_b1afe221-c4ee-49fc-b7fe-c1d82192293e" type="keywords" displayorder="3">
<title depth="1">II.<tab/>Keywords</title>
<p>The following are keywords to be used by search engines and document catalogues.</p>
<p>process, collection, instance, spatial, data, openapi, transactions, insert, update, delete, add, remove, deploy, undeploy, REST, PUT, POST, DELETE</p></clause>
<clause id="_security_considerations" type="security" obligation="informative" displayorder="4">
<title depth="1">III.<tab/>Security Considerations</title>
<p id="_00c9472e-dbc7-f796-a8df-a150ce697468">See <xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core</xref>, Clause 10.4.</p>

<p id="_db346df5-19b5-7146-5d4e-a5325e9af09e">Since deploy, replace and undeploy (DRU) operations will change the processes available to a client, servers will — in almost all cases — restrict the access to these operations.</p>

<p id="_0611bcc2-7a2a-5ca0-cb43-4fbfd164ef1c">Users making modifications to process resources need to:</p>

<ol id="_ff67afea-117c-9a74-a942-ed1e486c38b5" type="arabic"><li id="_790a0ff8-9e72-476e-948b-14a54f6b15ac" label="1"><p id="_db72525e-d308-2d6c-f2a9-f6a3e2c689bd">Be authenticated,</p>
</li>
<li id="_40e3f01a-bbb5-498d-9e31-937c54066626" label="2"><p id="_2227f124-9aed-5059-1656-68746d33aed7">Have “modification privileges” on the processes offered through the API,</p>
</li>
<li id="_92f67887-e6b2-4e78-a09a-89b68d4e3e9e" label="3"><p id="_8533f17e-74cf-10be-1249-57ec2bc55809">Have access to one or more of the POST, PUT and/or DELETE methods on the processes / processes/{processId} endpoints.</p>
</li>
</ol>

<p id="_f2acf1d5-dc7f-f046-c093-060f2df9f0ca">The API definition, as defined in Clause 7.3 from <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>, must reflect this in the resource paths and their available methods.</p>

<p id="_1b6daaa9-7136-4e1e-4740-1be1ed64df06">Examples in the Clauses specifying the requirements classes focus on the mechanics of the POST, PUT, and DELETE methods and exclude authentication. Since authentication will typically be required for all DRU requests, this section provides some examples/guidance:</p>

<p id="_d5adbc48-b81b-55ea-33aa-8eae1c7fb1b2">The OpenAPI definition exposed by the serve will declare the authentication schemes that an implementation of the Processes — Part 2 (DRU) supports for each operation (or for all operations in the API implementation).</p>

<p id="_91ccaf1d-bb93-09c6-590e-37ad2c1b5406">A member “security” in the OpenAPI definition object can be provided to list the default security schemes supported by all operations. Individual DRU operations can override this default by providing a “security” member for the individual operation.</p>

<example id="auth-example-1">
<name>Example — Example OpenAPI definition with security requirements</name>
<p id="_42c9e9e4-5d63-c7d2-48e3-e625ffa0dcd3">The following OpenAPI definition declares that the API accepts either api keys in an “X-API-Key” header or Json Web Token (JWT) bearer tokens to authenticate the requestor. X-API-KEY is a custom HTTP header that can be used to secure APIs. The API implementation will decide, if an authenticated request is rejected or executed based on the privileges of the authenticated user.</p>

<sourcecode id="_fbee54d9-0b10-39f8-442f-59d7212227bf" lang="JSON">{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "My API",
    "description" : "This API ...",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://example.com/api/v1"
  } ],
  "security" : [ {
    "JWT" : [ ],
    "api_key": [ ]
  } ],
  "paths" : { },
  "components" : {
    "securitySchemes": {
      "JWT" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "api_key" : {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  }
}</sourcecode>

</example>

<p id="_e92cc79a-ec22-8c7b-2fdd-8d5fb68b61d5">If the authentication of a secured request fails or if the user does not have sufficient privileges, the API endpoint will return an error.</p>

<p id="_35dfb9b0-c9f8-acd6-7652-5039494b5487">In case the request does not include information to authenticate the user, the server will respond with a 401 response (“Unauthorized”). The response will include a “WWW-Authenticate” header with hints as to how authentication credentials are provided.</p>

<sourcecode id="auth-example-2"><name>Listing 1 — Unauthorized request</name>Client                                                        Server
  |                                                             |
  |  DELETE /processes/SampleProcess   HTTP/1.1                 |
  | -----------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1  401 Unauthorized                                 |
  |  Date: Mon, 23 May 2022 11:18:45 GMT                        |
  |  WWW-Authenticate: Bearer realm="my-realm"                  |
  |  WWW-Authenticate: ApiKey header="X-API-Key"                |
  |  Content-Type: application/problem+json                     |
  |  Vary: Accept                                               |
  |  Content-Length: 86                                         |
  |                                                             |
  |  {                                                          |
  |    "status": 401,                                           |
  |    "title": "Unauthorized",                                 |
  |    "detail": "HTTP 401 Unauthorized"                        |
  |  }                                                          |
  | &#x3c;-----------------------------------------------------------|</sourcecode>


<note id="_6f2294dc-3ad0-21da-af60-25ee326b832d"><name>NOTE</name><p id="_a258995f-7c33-98d3-cf06-166581d31773">HTTP WWW-Authenticate header is a response-type header. It serves as a support for various authentication mechanisms which are important to control access to pages and other resources as well. All of these mechanisms are based on the use of the 401 status code. The HTTP WWW-Authenticate response header defines the authentication method that ought to be wont to gain access to a resource. As discussed earlier, the WWW-Authenticate header is sent along with a 401 Unauthorized response. (GeeksforGeeks.org, 2023)</p>
</note>

<p id="_d66b17ec-b8a2-9487-cef8-4655b68685cf">If valid authentication credentials have been provided, but the API refuses to execute the operation, because the user has insufficient privileges, the server will typically return a 403 response (“Forbidden”).</p>

<sourcecode id="auth-example-3"><name>Listing 2 — Forbidden request</name>Client                                                              Server
  |                                                                   |
  | DELETE /processes/SampleProcess HTTP/1.1                          |
  | Host: example.com                                                 |
  | Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ97HgQ    |
  |------------------------------------------------------------------&#x3e;|
  |                                                                   |
  | HTTP/1.1 403 Forbidden                                            |
  | Date: Mon, 23 May 2022 11:18:55 GMT                               |
  | Content-Type: application/problem+json                            |
  | Vary: Accept                                                      |
  | Content-Length: 80                                                |
  |                                                                   |
  | {                                                                 |
  |   "status" : 403,                                                 |
  |   "title" : "Forbidden",                                          |
  |   "detail" : "HTTP 403 Forbidden"                                 |
  | }                                                                 |
  |&#x3c;------------------------------------------------------------------|</sourcecode>


<p id="_231862aa-282a-0289-7ee9-35ddd11d76db">However, for security reasons, the server may also decide to return other status codes to hide information from a potential attacker. For example, the server may decide to return a 401 response even for a valid, but un-privileged user. Or the server may return a 404 response (“Not Found”) to hide the fact that the resource exists in the first place, typically if the user would also not be privileged to fetch the resource with a GET operation.</p>
</clause><clause id="_76a4123a-9d3e-474c-85ec-170fb2b02300" type="submitting_orgs" displayorder="5">
<title depth="1">IV.<tab/>Submitting Organizations</title>
<p>The following organizations submitted this Document to the Open Geospatial Consortium (OGC):</p>
 <ul><li>Geolabs</li>
<li>Terradue Srl.</li>
<li>Computer Research Institute of Montréal (CRIM).</li></ul>
 </clause>
<submitters id="_submitters" displayorder="6">
<title depth="1">V.<tab/>Submitters</title>
<p id="_feaa5b51-ad60-39cf-a4bd-25c944916941">All questions regarding this submission should be directed to the editors or the submitters:</p>

<table id="_38ae8950-9025-c2f9-0ab0-1f8f82a9b417" unnumbered="true"><thead><tr><th valign="middle" align="left">Name</th>
<th valign="middle" align="left">Affiliation</th>
</tr></thead>
<tbody><tr><td valign="middle" align="left">Gérald Fenoy <em>(editor)</em></td>
<td valign="middle" align="left">GeoLabs</td>
</tr></tbody>
</table>
</submitters></preface><sections>

<clause id="_scope" type="scope" obligation="normative" displayorder="7">
<title depth="1">1.<tab/>Scope</title>
<p id="_9a5ff78c-7398-5cf9-3635-4abfdf275148">The OGC API — Processes — Part 4 Standard is an extension to the OGC API – Processes – Part 1: Core Standard [<xref type="inline" target="OAProc-1">OGC 18-062r2</xref>] and defines the behavior of a server that supports the ability to create jobs without implying the process execution starts right away.</p>

<p id="_6824af80-da89-f664-3293-47e09cb572c2">Specifically, the Processes Part 4 Standard specifies:</p>

<ul id="_f0671639-63cf-94b1-d752-3decb17f2720"><li><p id="_f1a081c9-773a-f05f-61d7-85882315aff2">How to manage job.</p>
</li>
<li><p id="_c7c65dfe-3f3d-65f3-2977-fd45a7fda6db">How to handle provenenance information associated with a job.</p>
</li>
</ul>
</clause>

<clause id="_conformance" type="conformance" obligation="normative" displayorder="8">
<title depth="1">2.<tab/>Conformance</title>
<p id="_d0ff23cb-8f01-b005-947a-c73002a63cd8">The OGC API — Processes — Part 4 Standard defines the following requirements classes.</p>

<p id="_683e2e8b-abb1-35f1-0206-6501d2cc86b1">The main requirements class is:</p>

<ul id="_00cc3af8-9964-58f9-0774-d24b4cc9f8c6"><li><p id="_56b07a2e-6f5d-ebf5-a3bd-15a3e1e35665"><xref target="rc_job-management">Job Management</xref>.</p>
</li>
</ul>

<p id="_82ab0468-50c4-0758-dc0f-38626718ce56">This class specifies requirements that any Web API implementing Processes Part 4 must conform with.</p>

<p id="_48f8c926-f5af-e4df-5754-7195f77018c5">The <tt>Job Management</tt> class does mandate a specific encoding and format for the job definition.  However, the Part 4 extension defines the following conformance class:</p>

<ul id="_84b11349-5b7f-e478-3f97-96f84d18815b"><li><p id="_7a598c53-aaa7-94ab-46ea-ce830a59974f"><xref target="rc_openeo">OpenEO graph</xref></p>
</li>
</ul>

<p id="_1764b560-4cec-1b3f-328f-1ec8df7a5b0f">The <tt>OpenEO grap</tt> class defines that jobs can be created from an OpenEO graph.</p>

<p id="_947fd253-a7e4-74ca-7cbb-143438d2fb03">The provenance information associated with a job is not mandated to be supported by the server. A dedicated requirements class <xref target="rc_provenance">Provenance</xref> is defined for this feature.</p>

<p id="_a6315be5-c0dd-0fd6-5f31-1809d4c05c68">The standardization target for all Conformance class defined in this Standard is “Web API”.</p>

<p id="_6cf8e359-676d-9beb-e148-3bc74fa3245c">Conformance with this Standard shall be checked using all the relevant tests specified in <xref target="ats">Annex A</xref> of this document. The framework, concepts, and methodology for testing, and the criteria to be achieved to claim conformance are specified in the OGC Compliance Testing Policies and Procedures and the OGC Compliance Testing web site.</p>
</clause>



<clause id="_terms_definitions_and_abbreviated_terms" obligation="normative" type="terms" displayorder="10">
<title depth="1">4.<tab/>Terms, definitions and abbreviated terms</title><p id="_2f416b57-43bc-2a3e-a854-e5e5dc805e79">This document uses the terms defined in <link target="https://portal.ogc.org/public_ogc/directives/directives.php">OGC Policy Directive 49</link>, which is based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this document and OGC documents do not use the equivalent phrases in the ISO/IEC Directives, Part 2.</p>
<p id="_76fd54bc-da44-732d-e5ab-f7f7d63b7ef3">This document also uses terms defined in the OGC Standard for Modular specifications (<link target="https://portal.opengeospatial.org/files/?artifact_id=34762">OGC 08-131r3</link>), also known as the ‘ModSpec’. The definitions of terms such as standard, specification, requirement, and conformance test are provided in the ModSpec.</p>
<p id="_5af7e456-ee12-5d22-ff45-eb2571f1cf31">For the purposes of this document, the following additional terms and definitions apply.</p>

<terms id="_terms_and_definitions" obligation="normative">
<title depth="2">4.1.<tab/>Terms and definitions</title>
<term id="term-Execution-unit"><name>4.1.1.</name><preferred><strong>Execution unit</strong></preferred>
<definition><p id="_530ebfd3-7989-8847-2d89-2b8480e2fa99">A component containing a process that an implementation of the Processes API Part 1 can run.</p></definition>
 </term>

<term id="term-Deploy"><name>4.1.2.</name><preferred><strong>Deploy</strong></preferred>
<definition><p id="_001afca1-7aa6-75ca-da91-2bce78e894bf">Deploy refers to installing a desired execution unit onto a Processes API server so that client applications can interact with it as a process using the Processes API Part 1 Standard.</p></definition>
 </term>

<term id="term-Replace"><name>4.1.3.</name><preferred><strong>Replace</strong></preferred>
<definition><p id="_0aa6d08d-8fb9-6adb-7e72-9d4c943cf7a3">Replace refers to upgrading a deployed process from a Processes API implementation.</p></definition>
 </term>

<term id="term-Undeploy"><name>4.1.4.</name><preferred><strong>Undeploy</strong></preferred>
<definition><p id="_ca2c5ce1-49c5-b3ac-b08a-aff5243982b9">Undeploy refers to removing a deployed process from a Processes API implementation so that it does not appear as an available process.</p></definition>
 </term>
</terms>

<definitions id="_abbreviated_terms" type="abbreviated_terms" obligation="normative">
<title depth="2">4.2.<tab/>Abbreviated terms</title>
<dl id="_0d1a1300-d289-10ea-bdf6-33cc0a4d9480"><dt id="symbol-CWL">CWL</dt><dd><p id="_39817e20-e534-3875-bf59-777bb909a39d">Common Workflow Language</p>
</dd>
<dt id="symbol-DRU">DRU</dt><dd><p id="_48dab7b6-0c71-b288-3c64-e18d6b26dc55">Deploy, Replace, Undeploy</p>
</dd></dl>
</definitions></clause>

<clause id="_conventions_and_background" obligation="normative" displayorder="11">
<title depth="1">5.<tab/>Conventions and background</title>
<p id="_cc820a6f-d866-93a3-e271-f7886c1ecd99">See <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>, Clause 5.</p>
</clause>

<clause id="_requirements_class_job_management" obligation="normative" displayorder="12">
<title depth="1">6.<tab/>Requirements Class “Job Management”</title>
<clause id="job-management" obligation="normative">
<title depth="2">6.1.<tab/>Overview</title>
<table id="rc_job-mangement" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirements class 1</p></th></tr></thead>
<tbody><tr><th>Obligation</th><td>requirement</td></tr><tr><th>Target type</th><td>Web API</td></tr><tr><th>Prerequisites</th><td><xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core, Conformance Class ‘core’</xref><br/><xref target="rfc2616">RFC 2616 (HTTP/1.1)</xref></td></tr><tr><th>Label</th><td><link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management"/></td></tr></tbody></table>

<p id="_2f56c36e-7def-d36c-3038-bc4f4229d0ce">A server that implements the Job Management Requirements Class provides the ability to create, update and start jobs.</p>

<p id="_b6ac1d2b-1856-36f5-86b7-3fa58f1976d0">The HTTP POST method is used to create new jobs.</p>

<p id="_a37c8cb3-4585-d4c6-2fa1-80b32b1569ad">The HTTP PUT method is used to update the definition of a previously created jobs that are accessible via the Processes API endpoint.</p>

<p id="_ef83859b-5663-aaa9-a704-93776db15baf">Finally, the HTTP POST method is used to start a job.</p>

<p id="_0c799614-13f0-a70b-7d13-83d729c3d6b9">Creating or updating a job requires that a formal description of the new or updated jobs be provided by the client.  This Standard does mandate that a specific jobs schema be used. However, this extension defines the following conformance classe:</p>

<ul id="_3585aa23-1c61-14d5-0e35-94cd7c5ea7a0"><li><p id="_8a112ccc-1c26-5790-a412-517909150f93"><xref target="rc_openeo">OpenEO Process Graph</xref>, that enables support for OpenEO-encoded jobs definition.</p>
</li>
</ul>

<clause id="job-management-http_status_codes" obligation="normative">
<title depth="3">6.1.1.<tab/>HTTP status codes</title>
<p id="_e92769ac-e2cc-e04b-2300-3c916b26911b">Clients implementing the Processes API Part 4 should be prepared to handle any legal HTTP or HTTPS status code.</p>

<p id="_89f0b819-282b-3e77-0071-cb16e2aad27b">The <strong>Status Codes</strong> listed in <xref target="status_codes">Table 1</xref> are of particular relevance to implementors of this Standard. Status codes 200, 201 and 404 are called out in API requirements. Therefore, support for these status codes is mandatory for all compliant implementations. The remainder of the status codes in <xref target="status_codes">Table 1</xref> are not mandatory, but are important for the implementation of a well functioning API implementation. Support for these status codes is strongly encouraged for both client and server implementations.</p>

<table id="status_codes"><colgroup><col width="15%"/><col width="85%"/></colgroup>
<name>Table 1 — Typical HTTP status codes</name>
<thead><tr><th valign="middle" align="left">Status code</th>
<th valign="middle" align="left">Description</th>
</tr></thead>
<tbody><tr><td valign="middle" align="left"><tt>200</tt></td>
<td valign="middle" align="left">A successful request.</td>
</tr><tr><td valign="middle" align="left"><tt>201</tt></td>
<td valign="middle" align="left">The server has successfully completed the operation and a new resource has been created.</td>
</tr><tr><td valign="middle" align="left"><tt>202</tt></td>
<td valign="middle" align="left">The request was accepted for processing, but the processing was not completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place.</td>
</tr><tr><td valign="middle" align="left"><tt>204</tt></td>
<td valign="middle" align="left">A successful request with no additional content to send in the response.</td>
</tr><tr><td valign="middle" align="left"><tt>400</tt></td>
<td valign="middle" align="left">The server cannot or will not process the request due to an apparent client error. For example, a query parameter had an incorrect value.</td>
</tr><tr><td valign="middle" align="left"><tt>401</tt></td>
<td valign="middle" align="left">The request requires user authentication. The response includes a <tt>WWW-Authenticate</tt> header field containing a challenge applicable to the requested resource.</td>
</tr><tr><td valign="middle" align="left"><tt>403</tt></td>
<td valign="middle" align="left">The server understood the request, but is refusing to execute the request. While status code <tt>401</tt> indicates missing or bad authentication, status code <tt>403</tt> indicates that authentication is not the issue, but that the client is not authorized to perform the requested operation on the resource.</td>
</tr><tr><td valign="middle" align="left"><tt>404</tt></td>
<td valign="middle" align="left">The requested resource does not exist on the server. For example, a path parameter had an incorrect value.</td>
</tr><tr><td valign="middle" align="left"><tt>405</tt></td>
<td valign="middle" align="left">The request method is not supported. For example, a POST request was submitted, but the resource only supports GET requests.</td>
</tr><tr><td valign="middle" align="left"><tt>406</tt></td>
<td valign="middle" align="left">Content negotiation failed. For example, the <tt>Accept</tt> header submitted in the request did not support any of the media types supported by the server for the requested resource.</td>
</tr><tr><td valign="middle" align="left"><tt>412</tt></td>
<td valign="middle" align="left">The status code indicates that one or more conditions given in the request header fields evaluated to false when tested by the server.</td>
</tr><tr><td valign="middle" align="left"><tt>413</tt></td>
<td valign="middle" align="left">The server is refusing to process the request because the request content is larger than the server is willing or able to process.</td>
</tr><tr><td valign="middle" align="left"><tt>415</tt></td>
<td valign="middle" align="left">The server is refusing to service the request because the content is in a format not supported by this method on the target resource.</td>
</tr><tr><td valign="middle" align="left"><tt>422</tt></td>
<td valign="middle" align="left">The server understands the content type of the request content and the syntax of the request content is correct, but was unable to process the contained instructions. For example, the submitted resource does not meet a semantic constraint, e.g. a mandatory property is missing.</td>
</tr><tr><td valign="middle" align="left"><tt>500</tt></td>
<td valign="middle" align="left">An internal error occurred in the server.</td>
</tr></tbody>
<note id="_e20439c0-497a-8b68-1152-cd4524a855e9"><name>NOTE</name><p id="_c7bc9ecf-4eec-b650-f869-13d6331becc3">Status code <tt>422</tt> is not yet an official HTTP status code, but is expected to be added by the <link target="https://www.ietf.org/archive/id/draft-ietf-httpbis-semantics-14.html#name-422-unprocessable-content">draft IETF RFC “HTTP Semantics”</link>.</p>
</note></table>



<p id="_3c931324-e44c-73af-e849-c72ada9af358">More specific guidance is provided for each resource, where applicable.</p>

<table id="per_deploy-replace-undeploy_additional-status-codes" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Permission 1</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/per/core/additional-status-codes</td></tr><tr><th>A</th><td><p id="_414d9b94-12a0-3fb7-fe66-53f66f4158d3">Servers MAY support other HTTP protocol capabilities. Therefore, the server may return other status codes than those listed in <xref target="status_codes">Table 1</xref>.</p>
</td></tr></tbody></table>

<p id="_b1dd6cbd-9b9f-4250-a02f-77caf3eb447f">The API Description Document describes the HTTP status codes generated by that API imeplementation instance. This should not be an exhaustive list of all possible status codes. It is not reasonable to expect an API designer to control the use of HTTP status codes which are not generated by their software. Therefore, it is recommended that the API Description Document be limited to describing HTTP status codes relevant to the proper operation of the API application logic. Client implementations should be prepared to receive HTTP status codes in addition to those described in the API Description Document.</p>
</clause>

<clause id="cross_origin" obligation="normative">
<title depth="3">6.1.2.<tab/>Cross-origin requests</title>
<p id="_b30beb80-1a3e-d2b3-470b-e84e9441eb5c">See <xref type="inline" target="OAFeat-1">OGC API — Features — Part 1: Core</xref>, section <link target="http://www.opengis.net/doc/IS/ogcapi-features-1/1.0#cross_origin">Support for cross-origin requests</link>, about the importance of supporting cross-origin requests, typically via <link target="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">Cross-origin resource sharing (CORS)</link>.</p>
</clause>
</clause>

<clause id="create" obligation="normative">
<title depth="2">6.2.<tab/>Creating a new job</title>
<clause id="_sequence_diagram" obligation="normative">
<title depth="3">6.2.1.<tab/>Sequence diagram</title>
<p id="_0bee8a28-cf0d-d28b-75d8-df41119cdd34">The following diagram illustrates the sequence diagram for deploying a new process to the API:</p>

<sourcecode id="_a4e6f8e6-c4f5-9ce4-ea3b-84faade725b1"><name>Listing 3</name>Client                                                        Server
  |                                                             |
  |  POST /jobs   HTTP/1.1                                      |
  |  Content-Type: application/json                             |
  |                                                             |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 201 Created                                       |
  |  Location: /jobs/{jobId}                                    |
  |&#x3c;------------------------------------------------------------|</sourcecode>

</clause>

<clause id="_operation" obligation="normative">
<title depth="3">6.2.2.<tab/>Operation</title>
<table id="req_job-management_create_post-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 1</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/post-op</td></tr><tr><th>A</th><td><p id="_36b7d4d5-6d09-8c3c-73b3-2cc4465d1578">The server SHALL support the HTTP POST operation at the path <tt>/jobs</tt>.</p>
</td></tr></tbody></table>
</clause>

<clause id="_request_body" obligation="normative">
<title depth="3">6.2.3.<tab/>Request body</title>
<clause id="_overview" obligation="normative">
<title depth="4">6.2.3.1.<tab/>Overview</title>
<table id="req_deploy-replace-undeploy_deploy_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 2</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/body</td></tr><tr><th>A</th><td><p id="_aa6bf747-e700-221c-62cf-5d246125a6cc">The body of the POST request SHALL be in JSON format.</p>
</td></tr></tbody></table>

<table id="per_job-management_create_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Permission 2</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/per/job-management/create/body</td></tr><tr><th>A</th><td><p id="_ddba736b-41bd-baca-44af-87da2e8f2748">A server MAY support any encoding in the body of a HTTP POST operation.</p>
</td></tr></tbody></table>

<table id="req_job-management_create_content-type" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 3</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/content-type</td></tr><tr><th>A</th><td><p id="_71e70808-393b-8a68-09ff-e966dd3dc3eb">The <tt>Content-Type</tt> <link target="https://tools.ietf.org/html/rfc2616#section-14.17">header</link> SHALL be used to declare the media type of the request.</p>
</td></tr></tbody></table>

<p id="_87b91a75-d8dd-9e1e-eca5-a77282de714c">See <link target="https://www.rfc-editor.org/rfc/rfc7231#section-3.1.1.5">section 3.1.1.5 of RFC 7231</link> for details.</p>
</clause>

<clause id="_ogc_api_processes_workflow_execute_request_body" obligation="normative">
<title depth="4">6.2.3.2.<tab/>OGC API — Processes — Workflow Execute Request body</title>
<table id="rec_job-management_create_body-ogcapi-processes" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Recommendation 1</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/rec/job-management/create/body-ogcapi-processes</td></tr><tr><th>A</th><td><p id="_c6f8da73-0c8f-e55f-5690-45bfb3b4017c">If the job can be encoded as an <xref target="rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</xref>, implementation SHOULD consider supporting the <xref target="rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</xref> encoding.</p>
</td></tr></tbody></table>
</clause>

<clause id="_openeo_process_graph_body" obligation="normative">
<title depth="4">6.2.3.3.<tab/>OpenEO Process Graph body</title>
<table id="rec_job-management_create_body-openeo" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Recommendation 2</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/rec/job-management/create/body-openeo</td></tr><tr><th>A</th><td><p id="_3d340715-23f3-4281-99d5-e522e032a365">If the job can be encoded as an <xref target="rc_openeo">OpenEO graph</xref>, implementation SHOULD consider supporting the <xref target="rc_openeo">OpenEO graph</xref> encoding.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_response" obligation="normative">
<title depth="3">6.2.4.<tab/>Response</title>
<table id="req_job-management_create_response-jobid" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 4</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/response-jobid</td></tr><tr><th>A</th><td><p id="_1c4876b6-541d-f3f5-7b84-09ab865b20f5">If the operation completes, the server SHALL generate a job identifier (i.e. <tt>{jobId}</tt>) for the created job.</p>
</td></tr></tbody></table>

<table id="req_job-management_create_response_success" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 5</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/response-success</td></tr><tr><th>A</th><td><p id="_d592498f-78d6-58ff-e785-aae85a805b3e">A successful execution of the operation SHALL be reported as a response with a HTTP status code <tt>201</tt>.</p>
</td></tr><tr><th>B</th><td><p id="_4b76a13a-b1d4-8f72-409f-904a44ad0b5a">A response with HTTP status code <tt>201</tt> SHALL include a <tt>Location</tt> header with the URI of the deployed processes (path: <tt>/jobs/{jobId}</tt>).</p>
</td></tr></tbody></table>

<table id="req_job-management_create_response-body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 6</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/create/response-body</td></tr><tr><th>A</th><td><p id="_8323b904-7265-861a-949c-774ceed142db">The response SHALL include a body that contains a status information of the created job conforms to the <link target="https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/statusInfo.yaml">statusInfo.yaml</link> schema.</p>
</td></tr><tr><th>B</th><td><p id="_bde06cd4-9b3c-ac17-64ad-4d6f55e73ea4">The response SHALL contains a <tt>pending</tt> status code and the <tt>jobId</tt> property that contains the job identifier.</p>
</td></tr></tbody></table>
</clause>

<clause id="_exceptions" obligation="normative">
<title depth="3">6.2.5.<tab/>Exceptions</title>
<p id="_f7b92c5f-fd35-93c0-162b-d84cc963cfc4">See <xref target="job-management-http_status_codes">Clause 6.1.1</xref> for general guidance.</p>

<p id="_e74afee7-e3a9-bc9e-db1c-8cf1d7060cc9">If the request body’s media type is not supported by the server, see requirement /req/deploy-replace-undeploy/deploy/unsupported-media-type from <xref type="inline" target="OAProc-2">OGC 20-044</xref>.</p>
</clause>
</clause>

<clause id="update" obligation="normative">
<title depth="2">6.3.<tab/>Updating an existing job</title>
<clause id="_sequence_diagram_2" obligation="normative">
<title depth="3">6.3.1.<tab/>Sequence diagram</title>
<p id="_60d0883d-3c21-5ce4-0bf8-9a211d8cc57c">The following diagram illustrates the sequence diagram for updating a
previously created job.  The identifier of the job does not change.<note id="_4df02ccd-f792-92a7-e73d-87e4cc0f33d6"><name>NOTE</name><p id="_2e02f93e-0d50-00bf-bf6c-cdcb14df6978">The new job definition replaces the old job definition. Version control is not discussed in this Standard.</p>
</note></p>



<sourcecode id="_5bfb4670-db3f-fffa-3b4c-322e3609d69c"><name>Listing 4</name>Client                                                        Server
  |                                                             |
  |  PUT /jobs/{jobId}   HTTP/1.1                               |
  |  Content-Type: application/json                             |
  |                                                             |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 204 OK                                            |
  |&#x3c;------------------------------------------------------------|</sourcecode>

</clause>

<clause id="_operation_2" obligation="normative">
<title depth="3">6.3.2.<tab/>Operation</title>
<table id="req_job-management_update_put-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 7</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/update/put-op</td></tr><tr><th>A</th><td><p id="_452a4c49-5c22-df55-8b9d-dea9d14d2732">For every created jobs (path ‘/jobs/{jobId}’), the server SHALL support the HTTP PUT operation.</p>
</td></tr><tr><th>B</th><td><p id="_68ab5be2-fee6-8578-2504-ceadebe1af5c">The parameter ‘jobId’ is each ‘jobID’ property in the jobs list response (JSONPath: <tt>$.jobs[*].jobID</tt>).</p>
</td></tr></tbody></table>
</clause>

<clause id="_request_body_2" obligation="normative">
<title depth="3">6.3.3.<tab/>Request body</title>
</clause>

<clause id="_overview_2" obligation="normative">
<title depth="3">6.3.4.<tab/>Overview</title>
<table id="req_job-management_update_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 8</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/update/body*</td></tr><tr><th>A</th><td><p id="_51f8cccc-e230-10e9-a6de-577261d88fe5">The body of a PUT request SHALL be in JSON format.</p>
</td></tr></tbody></table>

<table id="per_job-management_update_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Permission 3</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/per/job-management/update/body</td></tr><tr><th>A</th><td><p id="_19ee445f-6d52-0b18-d77b-41b5755aff61">A server MAY support any encoding in the body of a HTTP PUT operation.</p>
</td></tr></tbody></table>

<table id="req_job-management_update_content-type" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 9</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/update/content-type</td></tr><tr><th>A</th><td><p id="_6f8135c0-4816-1362-85b6-38d24c8cd6ca">As per <xref target="rfc2616">HTTP 1.1</xref> (<link target="https://tools.ietf.org/html/rfc2616#section-14.17"/>) the ‘Content-Type’ header SHALL be used to indicate the media type of a request body containing the description of the replacement processes.</p>
</td></tr></tbody></table>

<clause id="_ogc_api_processes_workflow_execute_request_body_2" obligation="normative">
<title depth="4">6.3.4.1.<tab/>OGC API — Processes — Workflow Execute Request body</title>
<table id="rec_job-management_update-ogcapi-processes" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Recommendation 3</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/rec/job-management/update/body-ogcapi-processes</td></tr><tr><th>A</th><td><p id="_b67152c4-5050-6491-fe84-732ed2fc4e6e">If a job can be created from an rc_ogcapi-processes,OGC API — Processes — Workflow Execute Request&#x3e;&#x3e;, implementations SHOULD consider supporting the <xref target="rc_ogcapi-processes">OGC API — Processes — Workflow Execute Request</xref> encoding.</p>
</td></tr></tbody></table>
</clause>

<clause id="_openeo_process_graph_body_2" obligation="normative">
<title depth="4">6.3.4.2.<tab/>OpenEO Process Graph body</title>
<table id="rec_job-management_update-openeo" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Recommendation 4</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/rec/job-management/update/body-openeo</td></tr><tr><th>A</th><td><p id="_34bb6f7a-77a7-dd4c-54a6-66364e27cb10">If a job can be created from an <xref target="rc_openeo">OpenEO graph</xref>, implementations SHOULD consider supporting the <xref target="rc_openeo">OpenEO graph</xref> encoding.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_response_2" obligation="normative">
<title depth="3">6.3.5.<tab/>Response</title>
<table id="req_job-management_update_response" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 10</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/update/response</td></tr><tr><th>A</th><td><p id="_241ad88a-5cac-8e62-356a-b76aa673aaa3">A successful execution of the operation SHALL be reported as a response with a HTTP status code <tt>200</tt> or <tt>204</tt>.</p>
</td></tr><tr><th>B</th><td><p id="_78519526-578d-c177-533e-53c4edab51b5">If the operation is not executed immediately, but is added to a processing queue, the response SHALL have a HTTP status code <tt>202</tt>.</p>
</td></tr></tbody></table>

<p id="_ded5f060-a72e-02ea-5962-c2717db716f2">The status code depends on the server. If the server has replaced the job, the response is either <tt>200</tt> (if the response includes additional content) or <tt>204</tt> (if the response has no additional content).</p>

<p id="_15ad8117-f736-3d83-68c8-3a463bfe9734">If the server will process the replace request later, a <tt>202</tt> status code will be returned. In this case, the processing can succeed or fail, without further notification to the client.</p>
</clause>

<clause id="_exceptions_2" obligation="normative">
<title depth="3">6.3.6.<tab/>Exceptions</title>
<p id="_b1de8587-4731-aa0d-c6d4-6e61a6765d34">See <xref target="job-management-http_status_codes">Clause 6.1.1</xref> for general guidance.</p>

<p id="_6d3bcfa1-17e6-5c03-e165-1a9a06833e48">If the request body’s media type is not supported by the server, see requirement /req/deploy-replace-undeploy/deploy/unsupported-media-type from <xref type="inline" target="OAProc-2">OGC 20-044</xref>.</p>

<p id="_20b999c8-2bf0-b5db-074d-c8e14a5a7c5d">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>.</p>
</clause>
</clause>

<clause id="undeploy" obligation="normative">
<title depth="2">6.4.<tab/>Staring a job</title>
<clause id="_sequence_diagram_3" obligation="normative">
<title depth="3">6.4.1.<tab/>Sequence diagram</title>
<p id="_bfc814a4-fd71-ab8a-96f5-6b987c10317c">The following diagram illustrates the sequence diagram for starting the execution of a previously created jobs.</p>

<sourcecode id="_68081d38-a701-96df-b8ec-80135827cb50"><name>Listing 5</name>Client                                                        Server
  |                                                             |
  |  POST /jobs/{jobId}   HTTP/1.1                              |
  |------------------------------------------------------------&#x3e;|
  |                                                             |
  |  HTTP/1.1 204 OK                                            |
  |&#x3c;------------------------------------------------------------|</sourcecode>

</clause>

<clause id="_operation_3" obligation="normative">
<title depth="3">6.4.2.<tab/>Operation</title>
<table id="req_job-management_start_start-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 11</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/start/start-op</td></tr><tr><th>A</th><td><p id="_9ce968b2-fe06-0322-8435-c89129922d4a">For every created jobs (path: <tt>/jobs/{jobId}/results</tt>), the server SHALL support the HTTP POST operation.</p>
</td></tr><tr><th>B</th><td><p id="_169bce01-eaaf-bca5-c0d9-2df6652f33fb">The parameter <tt>jobId</tt> is each <tt>jobID</tt> property in the job list response (JSONPath: <tt>$.jobs[*].jobID</tt>).</p>
</td></tr></tbody></table>
</clause>

<clause id="_response_3" obligation="normative">
<title depth="3">6.4.3.<tab/>Response</title>
<table id="req_job-management_start_response" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 12</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/job-management/start/response</td></tr><tr><th>A</th><td><p id="_5a710e6b-083e-24b1-d87e-0ba527b6c5e8">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</p>
</td></tr><tr><th>B</th><td><p id="_74515fe0-18aa-9bbd-d95f-c7efc8e28a08">A response SHALL be a document that conforms to statusInfo.yaml.</p>
</td></tr></tbody></table>
</clause>

<clause id="_exceptions_3" obligation="normative">
<title depth="3">6.4.4.<tab/>Exceptions</title>
<p id="_d7fff97d-7ce9-1791-a918-8d1ad7da5719">See <xref target="job-management-http_status_codes">HTTP status codes</xref> for general guidance.</p>

<p id="_f44618b8-c7b5-3f44-d304-88519570c92a">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>.</p>
</clause>
</clause>

<clause id="job-management-definition" obligation="normative">
<title depth="2">6.5.<tab/>Job definition</title>
<p id="_f99a683d-150f-4e8f-44a5-eab92da69c22">For every job, it is possible to retrieve its original definition. It corresponds to the request’s body used to create or update the jobs.</p>

<clause id="_operation_4" obligation="normative">
<title depth="3">6.5.1.<tab/>Operation</title>
<table id="req_deploy-replace-undeploy_package_get-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 13</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/deploy-replace-undeploy/package/get-op</td></tr><tr><th>A</th><td><p id="_ceb25f7b-3bc0-4050-5a8c-8bae1c7a2e05">For every dynamically added process (using method: POST on path: /processes/{processId}), the server SHALL support the HTTP GET operation at the path <tt>/processes/{processId}/package</tt>.</p>
</td></tr><tr><th>B</th><td><p id="_96d622e0-ef54-236d-f457-96e02e9f4259">The parameter <tt>processId</tt> is each <tt>id</tt> property in the process collection response (JSONPath: <tt>$.processes[*].id</tt>).</p>
</td></tr></tbody></table>
</clause>

<clause id="_response_4" obligation="normative">
<title depth="3">6.5.2.<tab/>Response</title>
<clause id="_overview_3" obligation="normative">
<title depth="4">6.5.2.1.<tab/>Overview</title>
<table id="req_deploy-replace-undeploy_package_response-success" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 14</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/deploy-replace-undeploy/package/response-success</td></tr><tr><th>A</th><td><p id="_6e972738-8761-d2d6-e36a-71bde82f2288">A successful access to the resource SHALL be reported as a response with a HTTP status code <tt>200</tt>.</p>
</td></tr></tbody></table>

<table id="req_deploy-replace-undeploy_package_response-body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 15</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/deploy-replace-undeploy/package/response-body</td></tr><tr><th>A</th><td><p id="_1976e033-bb0e-3ab6-02e2-5845ee499f81">A response with HTTP status code <tt>200</tt> SHALL include a body that contains the request body used to create or update the job.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_exceptions_4" obligation="normative">
<title depth="3">6.5.3.<tab/>Exceptions</title>
<p id="_0b6b2a32-f192-cf75-1790-0285a91f2ea8">See <xref target="deploy-replace-undeploy-http_status_codes">HTTP status codes</xref> for general guidance.</p>

<p id="_c3db8b0a-f738-f72b-43db-39a4d5809365">If the job with the specified identifier does not exist on the server, see requirement /req/core/job-exception-no-such-job from <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>.</p>
</clause>
</clause>
</clause>

<clause id="_requirements_class_ogc_api_process_workflow_execute_request" obligation="normative" displayorder="13">
<title depth="1">7.<tab/>Requirements Class “OGC API — Process — Workflow Execute Request”</title>
<clause id="ogcapi-processes-overview" obligation="normative">
<title depth="2">7.1.<tab/>Overview</title>
<table id="rc_ogcapi-processes" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirements class 2</p></th></tr></thead>
<tbody><tr><th>Obligation</th><td>requirement</td></tr><tr><th>Target type</th><td>Web API</td></tr><tr><th>Prerequisites</th><td><xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core</xref><br/><xref target="rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</xref></td></tr><tr><th>Label</th><td><link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/ogcapi-processes"/></td></tr></tbody></table>

<p id="_7952c7d5-e769-9ca2-cb9e-ff974e8ee323">This requirements class defines that the OGC API — Process — Workflow Execute Request is supported as an encoding for job definitions.</p>
</clause>

<clause id="_ogc_api_processes" obligation="normative">
<title depth="2">7.2.<tab/>OGC API — Processes</title>
<clause id="_overview_4" obligation="normative">
<title depth="3">7.2.1.<tab/>Overview</title>
<table id="req_ogcapi-processes_schema" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 16</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/ogcapi-processes/schema</td></tr><tr><th>A</th><td><p id="_45d6ad49-ec36-d83b-b4a7-73d9217d60b1">An <tt>OGC API - Processes</tt> document SHALL be based upon the JSON schema <link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-workflows/execute-workflows.yaml">execute-workflow.yaml</link>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_create" obligation="normative">
<title depth="2">7.3.<tab/>Create</title>
<clause id="_ogc_api_processes_body" obligation="normative">
<title depth="3">7.3.1.<tab/>OGC API — Processes body</title>
<table id="req_ogcapi-processes_create_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 17</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/ogcapi-processes/create/body</td></tr><tr><th>A</th><td><p id="_5e485077-1425-4eb3-7533-fbbb2da2f9a1">The body of the POST request SHALL be based upon the OpenAPI 3.0 schema <link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-workflows/execute-workflows.yaml">execute-workflows.yaml</link></p>
</td></tr><tr><th>B</th><td><p id="_ab1eeff1-70f7-c915-b00a-eebd22c95f91">The media type <tt>application/json</tt> SHALL be used to indicate that request body contains a processes description encoded as an <xref target="rc_ogcapi-processes">OGC API — Processes</xref>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_update" obligation="normative">
<title depth="2">7.4.<tab/>Update</title>
<clause id="_ogc_api_processes_body_2" obligation="normative">
<title depth="3">7.4.1.<tab/>OGC API — Processes body</title>
<table id="req_ogcapi-processes_update__body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 18</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/ogcapi-processes/update/body</td></tr><tr><th>A</th><td><p id="_5d2a883d-a66b-6f99-5111-ebcef6e06ad0">The media type <tt>application/ogcapi-processes+json</tt> SHALL be used to indicate that request body contains a job encoded as an <xref target="rc_openeo">OGC API — Processes</xref>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_job_definition" obligation="normative">
<title depth="2">7.5.<tab/>Job definition</title>
<clause id="_ogc_api_processes_content" obligation="normative">
<title depth="3">7.5.1.<tab/>OGC API — Processes content</title>
<table id="req_ogcapi-processes_definition_response-body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 19</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/ogcapi-processes/definition/response-body</td></tr><tr><th>A</th><td><p id="_cfaab0d8-3078-e09d-33fc-37acc37e0bd1">A response with HTTP status code <tt>200</tt> SHALL include a body that contains the <xref target="rc_ogcapi-processes">OGC API — Processes</xref> to use to deploy the process.</p>
</td></tr></tbody></table>
</clause>
</clause>
</clause>

<clause id="_requirements_class_openeo_process_graph" obligation="normative" displayorder="14">
<title depth="1">8.<tab/>Requirements Class “OpenEO Process Graph”</title>
<clause id="openeo-overview" obligation="normative">
<title depth="2">8.1.<tab/>Overview</title>
<table id="rc_openeo" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirements class 3</p></th></tr></thead>
<tbody><tr><th>Obligation</th><td>requirement</td></tr><tr><th>Target type</th><td>Web API</td></tr><tr><th>Prerequisites</th><td><xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core</xref><br/><xref target="rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</xref></td></tr><tr><th>Label</th><td><link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/openeo"/></td></tr></tbody></table>

<p id="_63d175f2-a2df-8253-0412-5119311b0c21">This requirements class defines that the server supports the OpenEO Process Graph as an encoding for job definitions.</p>
</clause>

<clause id="_openeo_process_graph" obligation="normative">
<title depth="2">8.2.<tab/>OpenEO Process Graph</title>
<clause id="_overview_5" obligation="normative">
<title depth="3">8.2.1.<tab/>Overview</title>
<table id="req_openeo_schema" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 20</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/openeo/schema</td></tr><tr><th>A</th><td><p id="_337656e1-5fb9-3b2b-e9fe-4fa635fb0cd3">An <tt>OpenEO Process Graph</tt> document SHALL be based upon the JSON schema <link target="https://raw.githubusercontent.com/Open-EO/openeo-processes/master/meta/subtype-schemas.json#/definitions/process-graph"/>.</p>
</td></tr></tbody></table>

<sourcecode id="schema_ogcappkg" lang="yaml"><name>Listing 6 — 
  <link target="http://schemas.opengis.net/ogcapi/processes/part4/1.0/openapi/schemas/openeo-process-graph.yaml">Schema for OpenEO Process Graph</link>
</name>

<span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
<span class="na">additionalProperties</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">object</span>
  <span class="na">required</span><span class="pi">:</span> 
    <span class="pi">-</span> <span class="s">process_id</span>
    <span class="pi">-</span> <span class="s">arguments</span>
  <span class="na">properties</span><span class="pi">:</span>
    <span class="na">process_id</span><span class="pi">:</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">string</span>
    <span class="na">arguments</span><span class="pi">:</span> <span class="pi">{}</span></sourcecode>

</clause>
</clause>

<clause id="_create_2" obligation="normative">
<title depth="2">8.3.<tab/>Create</title>
<clause id="_openeo_body" obligation="normative">
<title depth="3">8.3.1.<tab/>OpenEO body</title>
<table id="req_openeo_create_body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 21</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/openeo/create/body</td></tr><tr><th>A</th><td><p id="_bdbd5f33-8da8-9bfc-34e6-ba1bae6a466e">The media type <tt>application/openeo+json</tt> SHALL be used to indicate that request body contains a processes description encoded as an <xref target="rc_openeo">OpenEO Process Graph</xref>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_update_2" obligation="normative">
<title depth="2">8.4.<tab/>Update</title>
<clause id="_openeo_body_2" obligation="normative">
<title depth="3">8.4.1.<tab/>OpenEO body</title>
<table id="req_openeo_update__body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 22</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/openeo/update/body</td></tr><tr><th>A</th><td><p id="_876ff18e-23b7-5c8c-7eed-cbc75301c932">The media type <tt>application/openeo+json</tt> SHALL be used to indicate that request body contains a job encoded as an <xref target="rc_openeo">OpenEO Process Graph</xref>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_job_definition_2" obligation="normative">
<title depth="2">8.5.<tab/>Job definition</title>
<clause id="_openeo_content" obligation="normative">
<title depth="3">8.5.1.<tab/>OpenEO content</title>
<table id="req_openeo_definition_response-body" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 23</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/openeo/definition/response-body</td></tr><tr><th>A</th><td><p id="_e1e31161-ce57-0b00-d251-3020f07cec83">A response with HTTP status code <tt>200</tt> SHALL include a body that contains the <xref target="rc_openeo">OpenEO Process Graph</xref> to use to deploy the process.</p>
</td></tr></tbody></table>
</clause>
</clause>
</clause>

<clause id="_requirements_class_quotation" obligation="normative" displayorder="15">
<title depth="1">9.<tab/>Requirements Class “Quotation”</title>
<clause id="quotation-overview" obligation="normative">
<title depth="2">9.1.<tab/>Overview</title>
<table id="rc_quotation" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirements class 4</p></th></tr></thead>
<tbody><tr><th>Obligation</th><td>requirement</td></tr><tr><th>Target type</th><td>Web API</td></tr><tr><th>Prerequisites</th><td><xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core</xref><br/><xref target="rc_jb-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/job-management</xref><br/><xref target="rc_openeo">http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/openeo</xref></td></tr><tr><th>Label</th><td><link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/quotation"/></td></tr></tbody></table>
</clause>
</clause>

<clause id="_requirements_class_provenance" obligation="normative" displayorder="16">
<title depth="1">10.<tab/>Requirements Class “Provenance”</title>
<clause id="provenance-overview" obligation="normative">
<title depth="2">10.1.<tab/>Overview</title>
<p id="_7b50b458-a999-e5e6-508d-5538add41719">This requirements class defines how to allow client application accessing the provenance of a job run.</p>

<table id="rc_cwl" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirements class 5</p></th></tr></thead>
<tbody><tr><th>Obligation</th><td>requirement</td></tr><tr><th>Target type</th><td>Web API</td></tr><tr><th>Prerequisite</th><td><xref type="inline" target="OAProc-1">OGC API — Processes — Part 1: Core</xref></td></tr><tr><th>Label</th><td><link target="http://www.opengis.net/spec/ogcapi-processes-4/1.0/req/provenance"/></td></tr></tbody></table>
</clause>

<clause id="_additional_endpoints" obligation="normative">
<title depth="2">10.2.<tab/>Additional endpoints</title>
<clause id="_inputs" obligation="normative">
<title depth="3">10.2.1.<tab/>Inputs</title>
<p id="_c486102c-cf9e-6946-6c98-16700e561269">The server MUST provide an endpoint to retrieve the inputs of a job run.</p>

<clause id="_operation_5" obligation="normative">
<title depth="4">10.2.1.1.<tab/>Operation</title>
<table id="req_job-provenance_inputs_get-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 24</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/provenance/inputs/get-op</td></tr><tr><th>A</th><td><p id="_90eb321b-ee83-ded5-0dab-8c88260357aa">For every created jobs (path: <tt>/jobs/{jobId}/inputs</tt>), the server SHALL support the HTTP GET operation.</p>
</td></tr><tr><th>B</th><td><p id="_287015a8-794e-3c63-2c63-7f848adad311">The parameter <tt>jobId</tt> is each <tt>jobID</tt> property in the job list response (JSONPath: <tt>$.jobs[*].jobID</tt>).</p>
</td></tr></tbody></table>
</clause>

<clause id="_response_5" obligation="normative">
<title depth="4">10.2.1.2.<tab/>Response</title>
<table id="req_provenance_inputs_response" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 25</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/provenance/inputs/response</td></tr><tr><th>A</th><td><p id="_7e275ca3-b841-6d5d-c6d4-67433523338e">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</p>
</td></tr><tr><th>B</th><td><p id="_eb6b45b9-9bd5-1edd-733a-d7bd87ea84b9">The response SHALL contains a JSON document that conforms to the schema <link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-job-management/inputs.yaml">inputs.yaml</link>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_outputs" obligation="normative">
<title depth="3">10.2.2.<tab/>Outputs</title>
<p id="_7922e547-a3ea-163d-eead-6a0cdcecf21d">The server MUST provide an endpoint to retrieve the outputs of a job run.</p>

<clause id="_operation_6" obligation="normative">
<title depth="4">10.2.2.1.<tab/>Operation</title>
<table id="req_job-provenance_outputs_get-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 26</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/provenance/outputs/get-op</td></tr><tr><th>A</th><td><p id="_6343c277-4ad1-9f62-01bf-be572a88a51a">For every created jobs (path: <tt>/jobs/{jobId}/outputs</tt>), the server SHALL support the HTTP GET operation.</p>
</td></tr><tr><th>B</th><td><p id="_dc3be4d9-6007-9428-9800-fe6afe24df32">The parameter <tt>jobId</tt> is each <tt>jobID</tt> property in the job list response (JSONPath: <tt>$.jobs[*].jobID</tt>).</p>
</td></tr></tbody></table>
</clause>

<clause id="_response_6" obligation="normative">
<title depth="4">10.2.2.2.<tab/>Response</title>
<table id="req_provenance_outputs_response" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 27</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/provenance/outputs/response</td></tr><tr><th>A</th><td><p id="_f291af7f-17e8-80d4-7060-82c4b75cdb78">A successful execution of the operation SHALL be reported as a response with a HTTP status code ‘200’.</p>
</td></tr><tr><th>B</th><td><p id="_f0d56038-a40b-7e4c-44d1-1287d91051e0">The response SHALL contains a JSON document that conforms to the schema <link target="https://github.com/opengeospatial/ogcapi-processes/blob/master/openapi/schemas/processes-job-management/outputs.yaml">outputs.yaml</link>.</p>
</td></tr></tbody></table>
</clause>
</clause>

<clause id="_run" obligation="normative">
<title depth="3">10.2.3.<tab/>Run</title>
<p id="_10286264-12ea-97be-6393-6f8cdc54c36d">The server MUST provide an endpoint to retrieve the run of a job.</p>

<clause id="_operation_7" obligation="normative">
<title depth="4">10.2.3.1.<tab/>Operation</title>
<table id="req_job-provenance_run_get-op" type="recommend" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Requirement 28</p></th></tr></thead>
<tbody><tr><th>Label</th><td>/req/provenance/run/get-op</td></tr><tr><th>A</th><td><p id="_191ceab5-cff3-fdd9-ef65-243c623c953c">For every created jobs (path: <tt>/jobs/{jobId}/run</tt>), the server SHALL support the HTTP GET operation.</p>
</td></tr><tr><th>B</th><td><p id="_d316a2b6-8786-661b-1ff6-4612609b55de">The parameter <tt>jobId</tt> is each <tt>jobID</tt> property in the job list response (JSONPath: <tt>$.jobs[*].jobID</tt>).</p>
</td></tr></tbody></table>
</clause>
</clause>
</clause>
</clause>

<clause id="oas" obligation="normative" displayorder="17">
<title depth="1">11.<tab/>OpenAPI 3.0</title>
<p id="_f2182161-14f5-1278-0393-98697bdc5aa6">See <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>, Clause 9.</p>
</clause>

<clause id="mediatypes" obligation="normative" displayorder="18">
<title depth="1">12.<tab/>Media Types</title>
<p id="_098b4c2f-4385-5f19-1e11-9951a90f18bd">See <xref type="inline" target="OAProc-1">OGC 18-062r2</xref>, Clause 13.</p>

<p id="_322857d8-caae-2a87-da41-31bc6dc85c35">Additional JSON media types that would typically be used in a server that supports JSON are:</p>

<ul id="_0c50a327-a311-5196-8ee0-7f3ba59bc2fb"><li><p id="_6be26d34-4d0a-bdad-b6bc-fa884aa58646">application/ogcapppkg+json</p>
</li>
<li><p id="_1c0f0d10-e13e-464b-ad67-4544e2f1aca6">application/cwl+json</p>
</li>
</ul>

<p id="_e79b5e86-73ec-38d0-a774-4a92d8514082">Additional CWL media types that would typically be used in a server that supports CWL are:</p>

<ul id="_8e86722f-3cf2-e97e-75ee-9770469d6470"><li><p id="_9caa56e4-4db4-5d1a-a41a-7adff9875fa7">application/cwl</p>
</li>
</ul>
</clause>








<references id="_references" normative="true" obligation="informative" displayorder="9">
<title depth="1">3.<tab/>Normative references</title><p id="_307b20e2-9e40-db56-abbf-2822ab2941cc">The following documents are referred to in the text in such a way that some or all of their content constitutes requirements of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies.</p>
<bibitem id="OAProc-1" type="standard" schema-version="v1.2.9"><formattedref>Benjamin Pross, Panagiotis (Peter) A. Vretanos: OGC 18-062r2, <em>OGC API — Processes — Part 1: Core</em>. Open Geospatial Consortium (2021). <link target="http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</link>.</formattedref><uri type="src">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</uri><uri type="obp">https://docs.ogc.org/is/18-062r2/18-062r2.html</uri><docidentifier type="OGC" primary="true">OGC 18-062r2</docidentifier><docidentifier scope="biblio-tag">OGC 18-062r2</docidentifier><biblio-tag/></bibitem>
<bibitem id="OAProc-2"><formattedref format="application/x-isodoc+xml">Pross, B.: OGC 18-062, <strong>OGC API — Processes — Part 2: Deploy, Replace, Undeploy</strong></formattedref><docidentifier type="OGC">OGC 20-044</docidentifier><docidentifier scope="biblio-tag">OGC 20-044</docidentifier><docnumber>20-044</docnumber><biblio-tag/></bibitem>
<bibitem id="OAProc-3" type="standard" schema-version="v1.2.9"><formattedref>Benjamin Pross, Panagiotis (Peter) A. Vretanos: OGC 18-062r2, <em>OGC API — Processes — Part 1: Core</em>. Open Geospatial Consortium (2021). <link target="http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</link>.</formattedref><uri type="src">http://www.opengis.net/doc/IS/ogcapi-processes-1/1.0.0</uri><uri type="obp">https://docs.ogc.org/is/18-062r2/18-062r2.html</uri><docidentifier type="OGC" primary="true">OGC 18-062r2</docidentifier><docidentifier scope="biblio-tag">OGC 18-062r2</docidentifier><biblio-tag/></bibitem>
<bibitem id="OAFeat-1" type="standard" schema-version="v1.2.9"><formattedref>Clemens Portele, Panagiotis (Peter) A. Vretanos, Charles Heazel: OGC 17-069r3, <em>OGC API — Features — Part 1: Core</em>. Open Geospatial Consortium (2019). <link target="http://www.opengis.net/doc/IS/ogcapi-features-1/1.0.0">http://www.opengis.net/doc/IS/ogcapi-features-1/1.0.0</link>.</formattedref><uri type="src">http://www.opengis.net/doc/IS/ogcapi-features-1/1.0.0</uri><uri type="obp">https://docs.ogc.org/is/17-069r3/17-069r3.html</uri><docidentifier type="OGC" primary="true">OGC 17-069r3</docidentifier><docidentifier scope="biblio-tag">OGC 17-069r3</docidentifier><biblio-tag/></bibitem>
</references></sections><annex id="ats" obligation="normative" displayorder="19">
<title><strong>Annex A</strong><br/>(normative)<br/><strong>Abstract Test Suite</strong></title>
<clause id="_introduction" obligation="normative">
<title depth="2">A.1.<tab/>Introduction</title>
<p id="_02eeb7e2-ae07-7102-1d39-d9b06be62432">OGC Web Application Programming Interfaces (APIs) are not Web Services in the traditional sense. Rather, they define the behavior and content of a set of Resources exposed through a Web API. Therefore, an API endpoint may expose resources in addition to those defined by the standard. A test engine must be able to traverse an implementation of the API, identify and validate test points, and ignore resource paths which are not to be tested.</p>

<p id="_2f8f86b6-6e1a-0247-e640-59b0185eda41">The Web API under test can require authorization. Any Executable Test Suite implementing this test suite should implement the following security schemes supported by OpenAPI 3.0: HTTP Authorization schemes “basic” and “bearer”, API keys, and OAuth2 flow “authorizationCode”.</p>
</clause>

<clause id="_conformance_class_deploy_replace_undeploy" obligation="normative">
<title depth="2">A.2.<tab/>Conformance Class Deploy, Replace, Undeploy</title>
<table id="ats_dru" type="recommendclass" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTitle">Conformance class A.1: Job Management</p></th></tr></thead>
<tbody><tr><th>Identifier</th>
<td><tt>http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</tt></td>
</tr><tr><th>Subject</th><td><xref target="rc_job-management">http://www.opengis.net/spec/ogcapi-processes-4/1.0/conf/job-management</xref></td></tr><tr><th>Target Type</th><td>Web API</td></tr><tr><th>Conformance test</th><td><xref target="_a86d877f-b639-4c33-aaf0-aafbda999bc2">Conformance test A.1-1: <tt>/conf/dru/deploy/post-op</tt></xref></td></tr></tbody></table>

<clause id="_create_operation" obligation="normative">
<title depth="3">A.2.1.<tab/>Create operation</title>
<table id="ats_dru_deploy_post-op" type="recommendtest" class="modspec"><thead><tr><th scope="colgroup" colspan="2"><p class="RecommendationTestTitle">Abstract test A.1</p></th></tr></thead>
<tbody><tr><th>Identifier</th>
<td><tt>/conf/jm/create/post-op</tt></td>
</tr><tr><th>Requirement</th><td>/req/job-management/create/post-op</td></tr><tr><th>Test purpose</th><td><p id="_cc03f424-278b-0166-2639-4f077846924c">Validate that the server support HTTP POST operation at the path /jobs/</p>
</td></tr><tr><th>Test method</th><td><ol id="_d296b973-7b89-1c7b-4079-d52afd0bac80" type="arabic"><li id="_a00923cd-bb0f-4ebc-bc52-4e30b9b30072" label="1"><p id="_53b3fea3-d9a0-bc6b-05c9-b80cfd8a7ae8">Construct a path for each “rel=http://www.opengis.net/def/rel/ogc/1.0/job-list” link on the landing page as well as for the {root}/jobs path.</p>
</li>
<li id="_191c8b46-6caa-4203-83e2-a0a57fc86c8c" label="2"><p id="_fc72724e-f13a-c143-3f82-e72502e115b7">Issue an HTTP POST request for each path.</p>
</li>
<li id="_cd6121e9-e4f7-4e20-b5c5-0e42de68ae50" label="3"><p id="_045cef93-6c04-6d7b-1ea8-aa85e3dfdd92">Validate that the response header does not contain <tt>405 Method not allowed</tt></p>
</li>
</ol>
</td></tr></tbody></table>
</clause>
</clause>
</annex><annex id="_revision_history" obligation="informative" displayorder="20">
<title><strong>Annex B</strong><br/>(informative)<br/><strong>Revision History</strong></title>
<table id="_1af3e526-b98d-61df-00c5-7c89dc3c51a2" unnumbered="true"><colgroup><col width="12%"/><col width="18%"/><col width="12%"/><col width="12%"/><col width="46%"/></colgroup><thead><tr><th valign="middle" align="left">Date</th>
<th valign="middle" align="left">Release</th>
<th valign="middle" align="left">Editor</th>
<th valign="middle" align="left">Primary clauses modified</th>
<th valign="middle" align="left">Description</th>
</tr></thead>
<tbody><tr><td valign="middle" align="left">2024-08-22</td>
<td valign="middle" align="left">None</td>
<td valign="middle" align="left">Gérald Fenoy</td>
<td valign="middle" align="left">all</td>
<td valign="middle" align="left">Boostraping the document</td>
</tr></tbody>
</table>
</annex><bibliography><references id="Bibliography" normative="false" obligation="informative" displayorder="21">
<title depth="1">Bibliography</title><bibitem id="OpenAPI-Spec">
  <formattedref format="application/x-isodoc+xml">OpenAPI Initiative. OpenAPI Specification 3.0.2. Available at:
<link target="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md"/>.</formattedref><docidentifier type="metanorma-ordinal">[1]</docidentifier>
  <docidentifier>OpenAPI Specification 3.0.2</docidentifier><docidentifier scope="biblio-tag">OpenAPI Specification 3.0.2</docidentifier>
  <docnumber>3.0.2</docnumber>
<biblio-tag>[1]<tab/></biblio-tag></bibitem><bibitem id="Common_Workflow_Language">
  <formattedref format="application/x-isodoc+xml">Peter Amstutz, Michael R. Crusoe, Nebojša Tijanić (editors), Brad Chapman, John Chilton, Michael Heuer, Andrey Kartashov, Dan Leehr, Hervé Ménager, Maya Nedeljkovich, Matt Scales, Stian Soiland-Reyes, Luka Stojanovic (2020): Common Workflow Language, v1.2. Specification, Common Workflow Language working group. <link target="https://w3id.org/cwl/"/></formattedref><docidentifier type="metanorma-ordinal">[2]</docidentifier>
  
<biblio-tag>[2]<tab/></biblio-tag></bibitem><bibitem id="OpenEO_Process_Graphs">
  <formattedref format="application/x-isodoc+xml">OpenEO: OpenEO Developers API Reference / Process Graphs. <link target="https://openeo.org/documentation/1.0/developers/api/reference.html#section/Processes/Process-Graphs"/></formattedref><docidentifier type="metanorma-ordinal">[3]</docidentifier>
  
<biblio-tag>[3]<tab/></biblio-tag></bibitem>



</references></bibliography>
</ogc-standard>
